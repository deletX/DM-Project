{"version":3,"sources":["icons/logo.svg","constants/pagesurls.js","constants/constants.js","constants/apiurls.js","actions/alertActions.js","actions/types.js","utils.jsx","actions/profileActions.js","actions/notificationsActions.js","actions/authActions.js","containers/AuthContainer.jsx","icons/GoogleLogo.svg","components/auth/signup/PersonalInfoForm.jsx","components/auth/signup/CarForm.jsx","components/auth/signup/SummaryData.jsx","components/auth/SignupComponent.jsx","components/auth/LoginComponent.jsx","components/event/ChipBox.jsx","components/event/EventCard.jsx","containers/HomeContainer.jsx","components/map/PositionsDialog.jsx","containers/Map.jsx","routes.jsx","components/alerts/AlertItem.jsx","containers/AlertContainer.jsx","theme.jsx","components/navbar/NotificationItem.jsx","components/navbar/NavBar.jsx","actions/searchActions.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/profileReducer.js","reducers/notificationReducer.js","reducers/searchReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","home","CLIENT_ID","APP_CLIENTID","APP_SECRET","apiBaseUrl","serverURL","currentProfileURL","tokenURL","signupURL","carsListURL","profilePk","profilesURL","notificationListURL","addAlert","text","style","dispatch","type","alertError","error","response","JSON","stringify","data","toString","updateObject","oldObject","updatedProperties","headers","content_type","access_token","otherHeaders","otherOptions","nominatimToPrimarySecondary","position","primary","secondary","address","postcode","road","house_number","hamlet","town","village","county","province","country","fetchProfile","localStorage","getItem","axios","get","then","res","id","user","picture","score","car_set","average_vote","received_feedback","given_feedback","setItem","carSet","averageVote","receivedFeedback","givenFeedback","getSuccess","catch","retrieveNotifications","notifications","success","token","checkAuthTimeout","expirationTime","refresh_token","setTimeout","refreshAuth","post","qs","client_id","client_secret","grant_type","expirationDate","Date","getTime","googleOAuthLogin","google_token","backend","authLogin","username","password","authLogout","clear","useStyles","makeStyles","theme","root","minWidth","backgroundColor","white","alignItems","flexDirection","display","formPaper","flexWrap","margin","maxWidth","palette","background","paper","inline","connect","state","isAuthenticated","undefined","auth","children","useEffect","history","push","classes","Container","className","Paper","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","d","_ref","svgRef","title","props","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","marginBottom","spacing","width","form","button","marginRight","imageInput","imageProgress","marginLeft","imgPreview","color","getContrastText","dark","maxHeight","minHeight","googleLogin","editAlert","PersonalInfoForm","firstName","setFirstName","lastName","setLastName","setUsername","usernameError","setUsernameError","setPassword","passwordError","setPasswordError","email","setEmail","emailError","setEmailError","image","setImage","imageURL","setImageURL","isGoogleLogin","setGoogleLogin","setGoogleAccessToken","handleNext","useState","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","usernameHelperText","setUsernameHelperText","validateEmail","input","undoGoogleLogin","value","test","validateUsername","validatePassword","charName","toUpperCase","charAt","Avatar","src","Grid","container","item","xs","isSignedIn","onSuccess","profileObj","split","replace","accessToken","givenName","familyName","imageUrl","responseType","blob","pop","name","onFailure","clientId","render","renderProps","Button","variant","onClick","startIcon","SvgIcon","component","GoogleIcon","Alert","severity","sm","TextField","fullWidth","label","placeholder","onChange","autoComplete","required","helperText","onBlur","justify","PhotoCamera","Input","controlled","fileReader","FileReader","file","files","onloadend","result","readAsDataURL","CircularProgress","size","CarForm","setName","totSeats","setTotSeats","consumption","setConsumption","fuel","setFuel","nameError","setNameError","FormControl","InputLabel","Select","labelId","MenuItem","step","InputProps","endAdornment","InputAdornment","val","instruction","carDivider","marginTop","SummaryData","carName","Typography","readOnly","Divider","inputProps","instructions","loading","backdrop","zIndex","drawer","loadingTypography","authSignup","first_name","last_name","googleToken","setPicture","formData","FormData","append","put","successPictureUpdate","postCar","profileId","tot_avail_seats","createCarSuccess","createCar","addError","setCarName","googleAccessToken","open","setOpen","steps","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","isStepSkipped","has","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","prevSkipped","add","Error","console","log","disabled","isStepValid","align","Stepper","orientation","map","index","stepProps","labelProps","optional","completed","Step","StepLabel","StepContent","getStepContent","Backdrop","Box","padding","formContainer","height","fontSize","err","chip","ChipBox","joinable","joined","owned","changeValues","Chip","icon","media","primaryButton","secondryButton","EventCard","event","date","date_time","Card","CardActionArea","CardMedia","CardContent","gutterBottom","noWrap","getDate","getMonth","getFullYear","getHours","getMinutes","CardActions","firstLine","plusButton","cardGridItem","gridContainer","search","events","eventListURL","setEvents","setJoinable","setJoined","setOwned","eventsFiltered","filter","includes","eventCards","IconButton","aria-label","AddBox","PositionsDialog","close","positions","selectItem","options","ListItem","place_id","ListItemText","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","List","mapBox","pos","navigator","geolocation","getCurrentPosition","setPos","coords","latitude","longitude","setLatitude","setLongitude","addr","setAddr","addrError","setAddrError","lastRequest","setPositions","zoom","getMapData","encodeURI","click","now","onKeyPress","ev","Map","center","TileLayer","attribution","url","Marker","draggable","onDragend","lat","lng","Popup","lon","parseInt","BaseRouter","createBrowserHistory","exact","path","LoginComponent","HomeContainer","MapContainer","AlertItem","alert","Collapse","in","action","AlertContainer","alertItems","alerts","createMuiTheme","light","main","contrastText","responsiveFontSizes","NotificationItem","notification","read","href","ListItemAvatar","content","grow","flexGrow","menuButton","border","cursor","textDecoration","outline","breakpoints","up","borderRadius","shape","fade","common","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","logo","list","fullList","drawerTitle","logout","notificationsNumber","setSearch","mobileMoreAnchorEl","setMobileMoreAnchorEl","drawerOpen","setDrawerOpen","toggleDrawer","isMobileMenuOpen","Boolean","handleMobileMenuClose","logoutButton","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Badge","badgeContent","aria-controls","aria-haspopup","notificationListItem","notificationDrawer","Drawer","anchor","role","onKeyDown","AppBar","Toolbar","pagesURL","alt","InputBase","edge","currentTarget","disableElevation","profile","onTryAutoSignup","ThemeProvider","window","location","hostname","match","initialState","authStart","authSuccess","authFail","authReducer","scrollTo","uuid","removeAlert","removeAllAlerts","alertsReducer","profileStart","getProfileSuccess","profilePictureUpdate","profileError","userDataUpdate","clearProfileData","carCreate","carUpdate","findIndex","car","carDelete","profileReducer","notificationsStart","notificationsError","getNotificationSuccess","notificationUpdate","notificationReducer","searchReducer","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8060c67b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ea4a202.svg\";","export const landingPage = \"/\";\nexport const home = \"/home\";\nexport const login = \"/login\";\nexport const signup = \"/signup\";\nexport const myProfile = \"/my-profile\";\nexport const profile_id = \"/profiles/:id\";\nexport const profile = \"/profiles/\";\nexport const event_id = \"/events/:id\";\nexport const event = \"/events/\";\n","import {home} from \"./pagesurls\";\n\nexport const CLIENT_ID = \"283420556311-30r26g3mtt5odkqmit6u7onam3qrul16.apps.googleusercontent.com\";\nexport const CLIENT_SECRET = \"KsSTbOaPDbxEbEGqkcyWl3-v\";\nexport const APP_CLIENTID = \"4mOLHPfJL0zueHOlawvJXsdnImpjOv3PmLdmm3NT\";\nexport const APP_SECRET = \"FW4dYuZsLmE6PQHk7qrPAc4shQhdx2hknqNOh58XO3JQ6PFI8um2z6wyJubxF6hKNOOOJfZUQ67jm5ApN5HJioq4XsNAGSbCLiQZqrqfo6jiy67ddpvMOl3Be8SATFSL\";\n\nexport const serverURL = \"http://localhost:8000/\";\n\nexport const status = [\n    'Joinable',\n    'Computing',\n    'Computed'\n];\n\nexport const defaultProfilePic = serverURL + \"media/default-profile.jpg\"","import {serverURL} from \"./constants\";\n\nlet apiBaseUrl = serverURL + 'api/v0.1/';\n\nexport const eventListURL = (joinable = true, joined = true, owned = false) => (apiBaseUrl + `events/?joined=${joined}&joinable=${joinable}&owned=${owned}`);\n\nexport const eventCreateURL = () => (apiBaseUrl + 'events/');\n\nexport const eventDetailURL = (eventPk) => (`${eventCreateURL()}${eventPk}/`);\n\nexport const eventJoinURL = (eventPk) => (`${eventDetailURL(eventPk)}participants/`);\n\nexport const participationEditURL = (eventPk, participantPk) => (`${eventJoinURL(eventPk)}${participantPk}/`);\n\nexport const currentProfileURL = () => (apiBaseUrl + 'current-profile/');\n\nexport const convertTokenURL = () => (apiBaseUrl + 'auth/convert-token');\n\nexport const tokenURL = () => (apiBaseUrl + 'auth/token');\n\nexport const signupURL = () => (apiBaseUrl + 'signup/');\n\nexport const profilesURL = (profilePk) => (apiBaseUrl + `profiles/${profilePk}/`);\n\nexport const carsListURL = (profilePk) => (`${profilesURL(profilePk)}cars/`);\n\nexport const carsDetailURL = (profilePk, carPk) => (`${carsListURL}${carPk}/`);\n\nexport const createFeedbackURL = (eventPk, receiverParticipantPk) => (`${participationEditURL(eventPk, receiverParticipantPk)}feedback/`);\n\nexport const editFeedbackURL = (eventPk, receiverParticipantPk, feedbackPk) => (`${createFeedbackURL(eventPk, receiverParticipantPk)}${feedbackPk}/`);\n\nexport const notificationListURL = () => (`${currentProfileURL()}notifications/`);\nexport const notificationEditURL = (notificationPk) => (`${notificationListURL()}${notificationPk}/`)\n\n\n","import * as actionTypes from \"./types\";\n\nexport const addAlert = (text, style) => (dispatch) => {\n    dispatch({\n        type: actionTypes.ADD_ALERT,\n        text: text,\n        style: style\n    });\n};\n\nexport const removeAllAlerts = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALL_ALERTS\n    });\n};\n\nexport const removeAlert = (id) => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALERT,\n        id: id\n    });\n};\n\n\nexport const alertError = (error) => (dispatch) => {\n    if (error.response) {\n        dispatch(addAlert(JSON.stringify(error.response.data), \"error\"));\n    } else {\n        dispatch(addAlert(error.toString(), \"error\"));\n    }\n};\n\n","/*\n    Alerts\n */\nexport const ADD_ALERT = \"ADD_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REMOVE_ALL_ALERTS = \"REMOVE_ALL_ALERTS\";\n\n/*\n    Auth\n*/\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n/*\n    Profile\n */\nexport const PROFILE_OP_START = \"PROFILE_OP_START\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const PROFILE_PICTURE_UPDATE = \"PROFILE_PICTURE_UPDATE\";\nexport const PROFILE_OP_ERROR = \"PROFILE_OP_ERROR\";\nexport const USER_DATA_UPDATE = \"USER_DATA_UPDATE\";\nexport const CLEAR_PROFILE_DATA = \"CLEAR_PROFILE_DATA\";\n\n/*\n    Profile - Car\n */\nexport const CAR_CREATE = \"CAR_CREATE\";\nexport const CAR_UPDATE = \"CAR_UPDATE\";\nexport const CAR_DELETE = \"CAR_DELETE\";\n\n/*\n    Notifications\n */\nexport const NOTIFICATIONS_START = \"NOTIFICATIONS_START\";\nexport const NOTIFICATIONS_ERROR = \"NOTIFICATIONS_ERROR\";\nexport const GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\nexport const NOTIFICATION_UPDATE = \"NOTIFICATION_UPDATE\";\nexport const CLEAR_NOTIFICATIONS = \"CLEAR_NOTIFICATIONS\";\n\n\n/*\n    SEARCH\n */\nexport const SET_SEARCH = \"SET_SEARCH\";","export const isAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n        return false;\n    } else {\n        const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n        return expirationDate > new Date();\n    }\n};\n\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\n/**\n *\n * @param {string}content_type\n * @param {string}access_token\n * @param {{}}otherHeaders\n * @param otherOptions\n */\nexport const headers = (content_type, access_token = null, otherHeaders = {}, otherOptions = {}) => {\n    let headers = {\n        headers: {\n            \"Content-type\": content_type,\n            ...otherHeaders\n        },\n        ...otherOptions\n    };\n    if (access_token != null) headers = {\n        ...headers, headers: {...headers.headers, \"Authorization\": `Bearer ${access_token}`}\n    };\n    return headers\n};\n\n\nexport const nominatimToPrimarySecondary = (position) => {\n    let primary = \"\";\n    let secondary = \"\";\n    let address = position.address\n\n    if (\"postcode\" in address) {\n        secondary += `${address.postcode} `\n    }\n\n    if (\"house_number\" in address) {\n        primary = `${address.road}, ${address.house_number}`\n        if (\"hamlet\" in address) {\n            secondary += `${address.hamlet} `;\n        }\n\n        if (\"town\" in address) {\n            secondary += `${address.town} `;\n        } else if (\"village\" in address) {\n            secondary += `${address.village} `;\n        }\n        if (\"county\" in address) {\n            secondary += `${address.county}`;\n        } else if (\"province\" in address) {\n            secondary += `${address.province} `;\n        }\n\n    } else if (\"road\" in address) {\n        primary = address.road\n        if (\"hamlet\" in address) {\n            secondary += `${address.hamlet} `;\n        }\n\n        if (\"town\" in address) {\n            secondary += `${address.town} `;\n        } else if (\"village\" in address) {\n            secondary += `${address.village} `;\n        }\n        if (\"county\" in address) {\n            secondary += `${address.county}`;\n        } else if (\"province\" in address) {\n            secondary += `${address.province} `;\n        }\n    } else if (\"hamlet\" in address) {\n        primary = address.hamlet\n\n        if (\"town\" in address) {\n            secondary += `${address.town} `;\n        } else if (\"village\" in address) {\n            secondary += `${address.village} `;\n        }\n        if (\"county\" in address) {\n            secondary += `${address.county}`;\n        } else if (\"province\" in address) {\n            secondary += `${address.province} `;\n        }\n    } else if (\"town\" in address) {\n        primary = address.town\n        if (\"county\" in address) {\n            secondary += `${address.county}`;\n        } else if (\"province\" in address) {\n            secondary += `${address.province} `;\n        }\n    } else if (\"village\" in address) {\n        primary = address.village\n        if (\"county\" in address) {\n            secondary += `${address.county}`;\n        } else if (\"province\" in address) {\n            secondary += `${address.province} `;\n        }\n    } else if (\"county\" in address) {\n        primary = address.county;\n\n        secondary += address.country;\n    } else if (\"province\" in address) {\n        primary = address.province;\n        secondary += address.country;\n    }\n\n    return {primary, secondary}\n}","import axios from \"axios\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"./types\";\nimport {carsListURL, currentProfileURL, signupURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {addAlert, alertError, removeAllAlerts} from \"./alertActions\";\nimport {authLogout} from \"./authActions\";\n\n\nconst start = () => (\n    {\n        type: PROFILE_OP_START\n    }\n);\n\nconst getSuccess = (id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback) => (\n    {\n        type: GET_PROFILE_SUCCESS,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    }\n);\n\nconst successPictureUpdate = (picture) => (\n    {\n        type: PROFILE_PICTURE_UPDATE,\n        picture,\n    }\n);\n\nconst fail = () => (\n    {\n        type: PROFILE_OP_ERROR,\n    }\n);\n\nconst changeUserDataSuccess = (id, firstName, lastName, email) => (\n    {\n        type: USER_DATA_UPDATE,\n        id,\n        firstName,\n        lastName,\n        email\n    }\n);\n\nconst createCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_CREATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst changeCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_UPDATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst deleteCarSuccess = (id) => (\n    {\n        type: CAR_DELETE,\n        id,\n    }\n);\n\nexport const clearProfileData = () => (dispatch) => (dispatch(\n        {\n            type: CLEAR_PROFILE_DATA\n        })\n);\n\n\nexport const fetchProfile = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            currentProfileURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, user, picture, score, car_set, average_vote, received_feedback, given_feedback} = res.data;\n            localStorage.setItem(\"profile_id\", id);\n            dispatch(removeAllAlerts());\n            return dispatch(getSuccess(id, user, picture, score, car_set, average_vote, received_feedback, given_feedback));\n        })\n        .catch(error => {\n            dispatch(fail());\n            dispatch(alertError(error));\n            return error;\n        })\n};\n\n\nexport const changePicture = (picture) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"picture\", picture, picture.name);\n    return axios\n        .put(\n            currentProfileURL(),\n            formData,\n            headers('multipart/form-data', access_token)\n        )\n        .then(res => {\n            dispatch(successPictureUpdate(res.data.picture));\n            dispatch(addAlert(\"Immagine modificata con successo!\", \"success\"));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const changeUserData = (first_name, last_name, email, password = null) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let data = {\n        first_name: first_name,\n        last_name: last_name,\n        email: email,\n        password: password\n    };\n    if (password != null) {\n        data.password = password;\n    }\n    return axios\n        .put(\n            signupURL(),\n            data,\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, firstName, lastName, email} = res.data;\n            dispatch(changeUserDataSuccess(id, firstName, lastName, email));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        });\n};\n\n\nexport const deleteUser = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n\n    return axios\n        .delete(\n            signupURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            addAlert(\"You have been deleted from the system!\", \"success\");\n            dispatch(authLogout());\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const createCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .post(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(createCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const updateCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .put(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(changeCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const deleteCar = (id) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n    return axios\n        .delete(\n            carsListURL(profileId),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(deleteCarSuccess(id));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n","import {notificationEditURL, notificationListURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {alertError} from \"./alertActions\";\nimport axios from \"axios\";\nimport {\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START,\n    CLEAR_NOTIFICATIONS\n} from \"./types\";\n\nconst start = () => (\n    {\n        type: NOTIFICATIONS_START\n    }\n);\n\nconst fail = () => (\n    {\n        type: NOTIFICATIONS_ERROR\n    }\n);\n\nconst getSuccess = (notifications) => (\n    {\n        type: GET_NOTIFICATIONS_SUCCESS,\n        notifications\n    }\n);\n\n/**\n *\n * @param id\n * @param {boolean} read\n */\nconst readSuccess = (id, read) => (\n    {\n        type: NOTIFICATION_UPDATE,\n        id,\n        read\n    }\n);\n\n\nexport const clearNotifications = () => (dispatch) => {\n    dispatch({type: CLEAR_NOTIFICATIONS})\n};\n\nexport const retrieveNotifications = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            notificationListURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(getSuccess(res.data))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const readNotification = (notificationId, read = true) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .put(\n            notificationEditURL(notificationId),\n            {\n                read: read\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(readSuccess(notificationId, read))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n","import axios from \"axios\";\nimport {convertTokenURL, tokenURL, signupURL} from \"../constants/apiurls\";\nimport {alertError, removeAllAlerts} from './alertActions';\nimport {AUTH_ERROR, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"./types\";\nimport loginURL from \"../constants/apiurls\";\nimport {APP_CLIENTID, APP_SECRET} from \"../constants/constants\";\nimport * as qs from \"qs\";\nimport {headers} from \"../utils\";\nimport {clearProfileData, fetchProfile} from \"./profileActions\";\nimport {clearNotifications, retrieveNotifications} from \"./notificationsActions\";\n\nconst start = () => ({\n    type: AUTH_START,\n});\n\nconst success = (token) => ({\n    type: AUTH_SUCCESS,\n    token: token\n});\n\nconst fail = () => ({\n    type: AUTH_ERROR\n});\n\nconst logout = () => {\n    localStorage.clear();\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime) => dispatch => {\n    const refresh_token = localStorage.getItem(\"refresh_token\")\n    setTimeout(() => {\n        dispatch(refreshAuth(refresh_token));\n    }, expirationTime * 1000);\n};\n\nexport const refreshAuth = (refresh_token) => (dispatch) => {\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'refresh_token',\n                refresh_token: refresh_token,\n            }),\n            headers('application/x-www-form-urlencoded')\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(fetchProfile());\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const googleOAuthLogin = (google_token) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            convertTokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'convert_token',\n                backend: 'google-oauth2',\n                token: google_token\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n            return dispatch(fetchProfile());\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authLogin = (username, password) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'password',\n                username: username,\n                password: password,\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(checkAuthTimeout(3600));\n            dispatch(retrieveNotifications());\n            return dispatch(fetchProfile());\n\n\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\n\nexport const authSignup = (username, first_name, last_name, email, password) => (dispatch) => {\n    dispatch(start());\n    // we return the promise in order to use wait till the end using \"then\"\n    return axios\n        .post(\n            signupURL(),\n            {\n                username: username,\n                first_name: first_name,\n                last_name: last_name,\n                email: email,\n                password: password\n            },\n            headers('application/json')\n        )\n        .then(res => {\n            return dispatch(authLogin(username, password))\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"access_token\");\n        if (token !== undefined || token !== null) {\n            const expirationDate = new Date(localStorage.getItem(\"expiration_date\"));\n            if (expirationDate <= new Date()) {\n                dispatch(authLogout());\n            } else {\n                dispatch(success(token));\n                dispatch(retrieveNotifications()).catch((error) => {\n                    console.log(error)\n                    return dispatch(authLogout())\n                });\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n                return dispatch(fetchProfile()).catch((error) => {\n                    console.log(error)\n                    return dispatch(authLogout())\n                });\n            }\n        }\n    };\n};\n\nexport const authLogout = () => dispatch => {\n    dispatch(logout());\n    // dispatch(removeAllAlerts());\n    dispatch(clearProfileData());\n    dispatch(clearNotifications());\n};\n\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {home, login} from \"../constants/pagesurls\";\nimport {connect} from \"react-redux\";\nimport {authCheckState, authLogin, googleOAuthLogin} from \"../actions/authActions\";\nimport {Container, Paper} from \"@material-ui/core\";\nimport {white} from \"color-name\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {history} from \"../App\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '100vw',\n        backgroundColor: white,\n        alignItems: 'center',\n        flexDirection: 'column',\n        display: 'flex',\n    },\n    formPaper: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 20,\n        maxWidth: '55ch',\n        minWidth: '10ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nconst AuthContainer = ({children, isAuthenticated}) => {\n    useEffect(() => {\n        if (isAuthenticated) history.push(home)\n    });\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth=\"xs\">\n            <Paper className={classes.formPaper}>\n                {children}\n            </Paper>\n        </Container>\n    )\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(AuthContainer)","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#4285F4;}\\n\\t.st1{fill:#34A853;}\\n\\t.st2{fill:#FBBC04;}\\n\\t.st3{fill:#EA4335;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M533.5,278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1,33.8-25.7,63.7-54.4,82.7v68h87.7 C503.9,431.2,533.5,361.2,533.5,278.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M272.1,544.3c73.4,0,135.3-24.1,180.4-65.7l-87.7-68c-24.4,16.6-55.9,26-92.6,26c-71,0-131.2-47.9-152.8-112.3 H28.9v70.1C75.1,486.3,169.2,544.3,272.1,544.3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st2\",\n  d: \"M119.3,324.3c-11.4-33.8-11.4-70.4,0-104.2V150H28.9c-38.6,76.9-38.6,167.5,0,244.4L119.3,324.3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st3\",\n  d: \"M272.1,107.7c38.8-0.6,76.3,14,104.4,40.8l0,0l77.7-77.7C405,24.6,339.7-0.8,272.1,0C169.2,0,75.1,58,28.9,150 l90.4,70.1C140.8,155.6,201.1,107.7,272.1,107.7z\"\n}));\n\nvar SvgGoogleLogo = function SvgGoogleLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Livello_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 533.5 544.3\",\n    style: {\n      enableBackground: \"new 0 0 533.5 544.3\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGoogleLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/GoogleLogo.fb42d919.svg\";\nexport { ForwardRef as ReactComponent };","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {CLIENT_ID, defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\nimport GoogleLogin from \"react-google-login\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport {ReactComponent as GoogleIcon} from '../../../icons/GoogleLogo.svg'\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        color: theme.palette.getContrastText(theme.palette.secondary.dark),\n        backgroundColor: theme.palette.secondary.dark,\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    },\n    googleLogin: {\n        width: '100%',\n        backgroundColor: \"white\"\n    },\n    editAlert: {\n        width: '90%'\n    }\n\n}));\n\n\nconst PersonalInfoForm = ({\n                              firstName, setFirstName, lastName, setLastName, username, setUsername,\n                              usernameError, setUsernameError, password, setPassword, passwordError,\n                              setPasswordError, email, setEmail, emailError, setEmailError,\n                              image, setImage, imageURL, setImageURL, isGoogleLogin, setGoogleLogin,\n                              setGoogleAccessToken, handleNext\n                          }) => {\n    const classes = useStyles();\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\n    const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n    const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n\n    const validateEmail = (input) => {\n        undoGoogleLogin();\n        if (input.target.value === null || input.target.value === \"\") {\n            setEmailError(true);\n            setEmailHelperText(\"Required\");\n        } else if (!(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(input.target.value))) {\n            setEmailError(true);\n            setEmailHelperText(\"Not a valid email\");\n        } else {\n            setEmailError(false);\n            setEmailHelperText(\"\");\n        }\n        setEmail(input.target.value)\n    };\n\n    const validateUsername = (input) => {\n        undoGoogleLogin()\n        if (input.target.value === null || \"\" === input.target.value) {\n            setUsernameError(true);\n            setUsernameHelperText(\"Required\");\n        } else {\n            setUsernameError(false);\n            setUsernameHelperText(\"\");\n        }\n        setUsername(input.target.value)\n    };\n\n    const validatePassword = (input) => {\n        undoGoogleLogin()\n        if (input.target.value === null || input.target.value === \"\") {\n            setPasswordError(true);\n            setPasswordHelperText(\"Required\");\n        } else if (!(/^[\\w!@#$%^&*]{8,}$/.test(input.target.value))) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should be at least 8 character long\");\n        } else if (!/^(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 number\");\n        } else if (!/^(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 capital\");\n        } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 lowercase\");\n        } else if (!/^(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 special character\");\n        } else {\n            setPasswordError(false);\n            setPasswordHelperText(\"\");\n        }\n        setPassword(input.target.value)\n    };\n\n    const undoGoogleLogin = () => {\n        setGoogleAccessToken(\"\");\n        setGoogleLogin(false);\n    }\n\n    let charName = (firstName !== \"\" ? firstName.toUpperCase().charAt(0) : \"\") + (lastName !== \"\" ? lastName.toUpperCase().charAt(0) : \"\");\n    return (\n        <div className={classes.root}>\n            <Avatar src={imageURL} className={classes.imgPreview}>\n                {charName !== \"\" ? charName : null}\n            </Avatar>\n\n            <form className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <GoogleLogin\n                            isSignedIn={false}\n                            onSuccess={(input) => {\n                                let username = input.profileObj.email.split(\"@\")[0].replace(' ', '_').replace('.', '_')\n                                setGoogleAccessToken(input.accessToken)\n                                setGoogleLogin(true)\n                                setFirstName(input.profileObj.givenName)\n                                setLastName(input.profileObj.familyName)\n                                setEmail(input.profileObj.email)\n                                setUsername(username)\n                                setImageURL(input.profileObj.imageUrl)\n                                axios.get(input.profileObj.imageUrl, {responseType: 'blob'}).then(res => {\n                                    let blob = res.data\n                                    let type = res.data.type.split('/').pop()\n                                    blob.name = `${username}.${type}`\n                                    setImage(blob)\n                                })\n                                handleNext()\n                            }}\n                            onFailure={() => {\n                            }}\n                            clientId={CLIENT_ID} render={renderProps => (\n                            <Button variant=\"contained\"\n                                    className={classes.googleLogin}\n                                    onClick={renderProps.onClick}\n                                    startIcon={<SvgIcon component={GoogleIcon} viewBox=\"0 0 533.5 544.3\"/>}\n                            >\n                                Signup with Google\n                            </Button>\n                        )}/>\n                    </Grid>\n                    {isGoogleLogin &&\n                    <Grid item xs={12}>\n                        <Alert className={classes.editAlert} severity=\"warning\">Editing these info will undo your Google\n                            Signup</Alert>\n                    </Grid>\n                    }\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"name\" label=\"First Name\" placeholder=\"James\"\n                                   value={firstName}\n                                   onChange={(input) => {\n                                       undoGoogleLogin();\n                                       setFirstName(input.target.value)\n                                   }}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"surname\" label=\"Last Name\" placeholder=\"Bond\"\n                                   value={lastName}\n                                   onChange={(input) => {\n                                       undoGoogleLogin();\n                                       setLastName(input.target.value)\n                                   }}\n                                   autoComplete=\"family-name\"/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"username\"\n                                   label=\"Username\"\n                                   value={username}\n                                   placeholder=\"jamesbond007\"\n                                   helperText={usernameHelperText}\n                                   onChange={validateUsername}\n                                   onBlur={validateUsername}\n                                   error={usernameError}\n                                   autoComplete=\"username\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"email\"\n                                   label=\"E-mail\"\n                                   placeholder=\"jamesbond@mi6.co.uk\"\n                                   type=\"email\"\n                                   error={emailError}\n                                   helperText={emailHelperText}\n                                   onChange={validateEmail}\n                                   onBlur={validateEmail}\n                                   value={email}\n                                   autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"password\"\n                                   label=\"Password\"\n                                   error={passwordError}\n                                   value={password}\n                                   type=\"password\"\n                                   helperText={passwordHelperText}\n                                   onChange={validatePassword}\n                                   onBlur={validatePassword}\n                                   autoComplete=\"new-password\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            component=\"label\"\n                            justify=\"flex-end\"\n                            className={classes.button}\n                            startIcon={<PhotoCamera/>}\n                        >Picture\n\n                            <Input className={classes.imageInput} type=\"file\" controlled=\"true\" onChange={(input) => {\n                                undoGoogleLogin();\n                                setImage(\"loading\");\n                                let fileReader = new FileReader();\n                                let file = input.target.files[0];\n                                fileReader.onloadend = () => {\n                                    setImageURL(fileReader.result)\n                                }\n                                setImage(file)\n                                fileReader.readAsDataURL(file)\n\n                            }}/>\n                            {image === \"loading\" ? (\n                                <>\n                                    <CircularProgress size=\"2ch\" className={classes.imageProgress}/>\n                                </>\n                            ) : (\n                                <>\n                                </>\n                            )}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n};\n\nexport default PersonalInfoForm;","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n}));\n\nconst CarForm = ({\n                     name, setName, totSeats, setTotSeats,\n                     consumption, setConsumption,\n                     fuel, setFuel,\n                 }) => {\n    const classes = useStyles();\n    let [nameError, setNameError] = useState(false)\n\n    return (\n        <div className={classes.root}>\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"car-name\" label=\"Name\" placeholder=\"Fiat Uno 1992\"\n                                   value={name}\n                                   onChange={(input) => {\n                                       let name = input.target.value;\n                                       if (name.length > 0) {\n                                           setNameError(false)\n                                       } else {\n                                           setNameError(true)\n                                       }\n                                       setName(name);\n                                   }}\n                                   onBlur={(input) => {\n                                       if (input.target.value.length < 0 || input.target.value === \"\") {\n                                           setNameError(true)\n                                       }\n                                   }}\n                                   error={nameError}\n                                   required\n                                   helperText={nameError ? \"Required\" : \"\"}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                            <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                    onChange={(input) => {\n                                        setTotSeats(input.target.value)\n                                    }}>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                                <MenuItem value={6}>6</MenuItem>\n                                <MenuItem value={7}>7</MenuItem>\n                                <MenuItem value={8}>8</MenuItem>\n                                <MenuItem value={9}>9</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                            <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                    onChange={(input) => {\n                                        setFuel(input.target.value)\n                                    }}>\n                                <MenuItem value={1}>Petrol</MenuItem>\n                                <MenuItem value={2}>Diesel</MenuItem>\n                                <MenuItem value={3}>Gas</MenuItem>\n                                <MenuItem value={4}>Electric</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            type=\"number\"\n                            helperText=\"Between 5 and 25\"\n                            step={0.05}\n                            label=\"Consumption\"\n                            value={consumption}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                            }}\n                            onChange={(input) => {\n                                setConsumption(input.target.value)\n                            }}\n                            onBlur={(input) => {\n                                let val = input.target.value\n                                if (val < 5)\n                                    input.target.value = 5;\n                                if (val > 20)\n                                    input.target.value = 20;\n                                setConsumption(input.target.value)\n                            }}\n\n                        />\n                    </Grid>\n\n                </Grid>\n            </FormControl>\n        </div>\n    )\n};\n\nexport default CarForm;","import {makeStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    },\n    instruction: {\n        marginBottom: theme.spacing(2),\n    },\n    carDivider: {\n        width: '123%',\n        marginTop: theme.spacing(5),\n        marginRight: '22px',\n        marginBottom: theme.spacing(5),\n    }\n\n}));\n\nconst SummaryData = ({\n                         firstName, lastName, username, password, email,\n                         imageURL, carName, totSeats, consumption, fuel,\n                         isGoogleLogin\n                     }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.instruction}>\n                Review you're data before submitting!\n            </Typography>\n            <Avatar src={imageURL !== \"\" ? imageURL : defaultProfilePic} className={classes.imgPreview}/>\n\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    {isGoogleLogin &&\n                    <>\n                        <Grid item xs={12}>\n                            <Alert severity=\"info\">Signing in with Google</Alert>\n                        </Grid>\n                    </>\n                    }\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"name\" label=\"First Name\" value={firstName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"surname\" label=\"Last Name\" value={lastName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            value={username}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            type=\"email\"\n                            value={email}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    {!isGoogleLogin &&\n                    <>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                value={password}\n                                type=\"password\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                        </Grid>\n                    </>\n                    }\n                </Grid>\n            </FormControl>\n            {carName !== \"\" &&\n            <>\n                <Divider className={classes.carDivider}/>\n                <FormControl variant=\"outlined\" className={classes.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField fullWidth id=\"car-name\" label=\"Name\"\n                                       value={carName}\n                                       InputProps={{\n                                           readOnly: true,\n                                       }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                                <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}\n                                >\n                                    <MenuItem value={2}>2</MenuItem>\n                                    <MenuItem value={3}>3</MenuItem>\n                                    <MenuItem value={4}>4</MenuItem>\n                                    <MenuItem value={5}>5</MenuItem>\n                                    <MenuItem value={6}>6</MenuItem>\n                                    <MenuItem value={7}>7</MenuItem>\n                                    <MenuItem value={8}>8</MenuItem>\n                                    <MenuItem value={9}>9</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                                <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}>\n                                    <MenuItem value={1}>Petrol</MenuItem>\n                                    <MenuItem value={2}>Diesel</MenuItem>\n                                    <MenuItem value={3}>Gas</MenuItem>\n                                    <MenuItem value={4}>Electric</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                type=\"number\"\n                                step={0.05}\n                                label=\"Consumption\"\n                                value={consumption}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                                    readOnly: true,\n                                }}\n                            />\n                        </Grid>\n\n                    </Grid>\n                </FormControl>\n            </>\n            }\n        </div>\n    )\n};\n\nexport default SummaryData;","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport CarForm from \"./signup/CarForm\";\nimport SummaryData from \"./signup/SummaryData\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {home, signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authCheckState, authLogin, authSignup, googleOAuthLogin} from \"../../actions/authActions\";\nimport {connect} from \"react-redux\";\nimport {changePicture, createCar} from \"../../actions/profileActions\";\nimport {addAlert} from \"../../actions/alertActions\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    root: {\n        width: '95%',\n        margin: 10\n    },\n    loading: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    loadingTypography: {\n        marginBottom: theme.spacing(2),\n    }\n\n}));\n\nconst getSteps = () => (\n    [\"Personal Info\", \"Add your Car\", \"Submit!\"]\n);\n\n\nfunction SignupComponent({authSignup, googleLogin, setPicture, postCar, addError}) {\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n    const [image, setImage] = useState(null);\n    const [imageURL, setImageURL] = useState(\"\");\n\n\n    const [carName, setCarName] = useState(\"\");\n    const [totSeats, setTotSeats] = useState(4);\n    const [consumption, setConsumption] = useState(10);\n    const [fuel, setFuel] = useState(1);\n\n    const [isGoogleLogin, setGoogleLogin] = useState(false);\n    const [googleAccessToken, setGoogleAccessToken] = useState(\"\");\n\n    const [open, setOpen] = useState(true);\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PersonalInfoForm firstName={firstName} setFirstName={setFirstName} lastName={lastName}\n                                         setLastName={setLastName} username={username} setUsername={setUsername}\n                                         usernameError={usernameError} setUsernameError={setUsernameError} email={email}\n                                         setEmail={setEmail} emailError={emailError} setEmailError={setEmailError}\n                                         password={password} setPassword={setPassword} passwordError={passwordError}\n                                         setPasswordError={setPasswordError} image={image} setImage={setImage}\n                                         imageURL={imageURL} setImageURL={setImageURL} isGoogleLogin={isGoogleLogin}\n                                         setGoogleLogin={setGoogleLogin}\n                                         setGoogleAccessToken={setGoogleAccessToken} handleNext={handleNext}\n                />;\n            case 1:\n                return <CarForm name={carName} setName={setCarName} totSeats={totSeats} setTotSeats={setTotSeats}\n                                consumption={consumption} setConsumption={setConsumption} fuel={fuel}\n                                setFuel={setFuel}/>\n            case 2:\n                return <SummaryData firstName={firstName} lastName={lastName} username={username} email={email}\n                                    password={password} imageURL={imageURL} carName={carName} totSeats={totSeats}\n                                    consumption={consumption} fuel={fuel} isGoogleLogin={isGoogleLogin}/>\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n\n    const steps = getSteps();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepValid = (step) => {\n        switch (step) {\n            case 0:\n                return (!emailError && email.length > 0 && !usernameError && username.length > 0 && !passwordError && password.length > 0) || isGoogleLogin;\n            case 1:\n                return carName.length > 0;\n            default:\n                return true;\n        }\n    };\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const clearSkipped = (step) => {\n        if (step === 1) {\n            setCarName(\"\")\n            setTotSeats(4)\n            setFuel(1)\n            setConsumption(10)\n        }\n    }\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            addError(\"You can't skip a step that isn't optional.\");\n        }\n        clearSkipped(activeStep)\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const uploadData = () => {\n        if (isGoogleLogin) {\n            googleLogin(googleAccessToken).then((value) => {\n                if (value instanceof Error) {\n                    addError(\"An error occurred while signing you up with google\")\n                    console.log(value)\n                    setOpen(false);\n                    setActiveStep(0);\n                } else {\n                    if (carName !== \"\") {\n                        postCar(carName, totSeats, fuel, consumption)\n                    }\n                    if (imageURL !== \"\") {\n                        setPicture(image)\n                    }\n                    history.push(home)\n                }\n            })\n        } else {\n            authSignup(username, firstName, lastName, email, password).then((value) => {\n                if (value instanceof Error) {\n                    addError(\"An error occurred while signing you up\")\n                    console.log(value)\n                    setOpen(false);\n                    setActiveStep(0);\n                } else {\n                    if (carName !== \"\") {\n                        postCar(carName, totSeats, fuel, consumption)\n                    }\n                    if (imageURL !== \"\") {\n                        setPicture(image)\n                    }\n                    history.push(home)\n                }\n            })\n        }\n    }\n\n    if (activeStep === steps.length) {\n        uploadData()\n    }\n\n    const disabled = !isStepValid(activeStep);\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Sign Up!\n            </Typography>\n            <Divider/>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            <StepContent>\n                                {getStepContent(index)}\n                                <div>\n                                    <Button disabled={activeStep === 0} onClick={handleBack}\n                                            className={classes.button}>\n                                        Back\n                                    </Button>\n                                    {isStepOptional(activeStep) && (\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleSkip}\n                                            className={classes.button}\n                                        >\n                                            Skip\n                                        </Button>\n                                    )}\n\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={disabled}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'SignUP!' : 'Next'}\n                                    </Button>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === steps.length &&\n            <Backdrop className={classes.backdrop} open={open}>\n                <Box className={classes.loading}>\n                    <Typography className={classes.loadingTypography}>\n                        Loading your data!\n                    </Typography>\n                    <CircularProgress color=\"inherit\"/>\n                </Box>\n            </Backdrop>\n\n            }\n\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authSignup: (username, firstName, lastName, email, password) => dispatch(authSignup(username, firstName, lastName, email, password)),\n        googleLogin: (googleToken) => dispatch(googleOAuthLogin(googleToken)),\n        setPicture: (image) => dispatch(changePicture(image)),\n        postCar: (carName, totSeats, fuel, consumption) => dispatch(createCar(carName, totSeats, fuel, consumption)),\n        addError: (text) => dispatch(addAlert(text, \"error\")),\n    };\n};\n\n\nexport default connect(null, mapDispatchToProps)(SignupComponent)","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport CarForm from \"./signup/CarForm\";\nimport SummaryData from \"./signup/SummaryData\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {home, signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authCheckState, authLogin, authSignup, googleOAuthLogin} from \"../../actions/authActions\";\nimport {connect} from \"react-redux\";\nimport {changePicture, createCar} from \"../../actions/profileActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport {CLIENT_ID} from \"../../constants/constants\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport {ReactComponent as GoogleIcon} from \"../../icons/GoogleLogo.svg\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport LockIcon from '@material-ui/icons/Lock';\nimport {addAlert} from \"../../actions/alertActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    root: {\n        width: '95%',\n        margin: 10\n    },\n    formContainer: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    loading: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    loadingTypography: {\n        marginBottom: theme.spacing(2),\n    },\n    form: {\n        width: '90%',\n    },\n    googleLogin: {\n        width: '100%',\n        height: 45,\n        backgroundColor: \"white\",\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imgPreview: {\n        color: theme.palette.getContrastText(theme.palette.secondary.dark),\n        backgroundColor: theme.palette.secondary.dark,\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    }\n\n}));\n\n\nfunction SignupComponent({authLogin, googleLogin, addError}) {\n\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const classes = useStyles();\n\n    const disabled = !(username.length > 0 && password.length > 0);\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Log in!\n            </Typography>\n            <Divider/>\n            <div className={classes.formContainer}>\n                <Avatar className={classes.imgPreview}>\n                    <LockIcon fontSize=\"large\"/>\n                </Avatar>\n\n                <form className={classes.form}>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12}>\n                            <GoogleLogin\n                                isSignedIn={false}\n                                onSuccess={(input) => {\n                                    let username = input.profileObj.email.split(\"@\")[0]\n                                    googleLogin(input.accessToken).catch(err => {\n                                        if (!err instanceof Error) {\n                                            history.push(home)\n                                        } else {\n                                            addError(\"An error occurred while logging you in with google\")\n                                            console.log(err)\n                                        }\n                                    })\n\n                                }}\n                                onFailure={() => {\n                                }}\n                                clientId={CLIENT_ID} render={renderProps => (\n                                <Button variant=\"contained\"\n                                        className={classes.googleLogin}\n                                        onClick={renderProps.onClick}\n                                        startIcon={<SvgIcon component={GoogleIcon} viewBox=\"0 0 533.5 544.3\"/>}\n                                >\n                                    Login with Google\n                                </Button>\n                            )}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\"\n                                       fullWidth\n                                       required id=\"username\"\n                                       label=\"Username\"\n                                       value={username}\n                                       placeholder=\"jamesbond007\"\n                                       helperText=\"Required\"\n                                       onChange={(input) => {\n                                           setUsername(input.target.value);\n                                           setUsernameError(input.target.value.length === 0);\n                                       }}\n                                       onBlur={(input) => {\n                                           setUsername(input.target.value);\n                                           setUsernameError(input.target.value.length === 0);\n                                       }}\n                                       error={usernameError}\n                                       autoComplete=\"username\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\"\n                                       fullWidth\n                                       required id=\"password\"\n                                       label=\"Password\"\n                                       error={passwordError}\n                                       value={password}\n                                       type=\"password\"\n                                       helperText=\"Required\"\n                                       onChange={(input) => {\n                                           setPassword(input.target.value);\n                                           setPasswordError(input.target.value.length === 0);\n                                       }}\n                                       onBlur={(input) => {\n                                           setPassword(input.target.value);\n                                           setPasswordError(input.target.value.length === 0);\n                                       }}\n                                       autoComplete=\"new-password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                component=\"label\"\n                                justify=\"flex-end\"\n                                className={classes.button}\n                                disabled={disabled}\n                                onClick={() => {\n                                    authLogin(username, password).catch(err => {\n                                        if (!err instanceof Error) {\n                                            history.push(home)\n                                        } else {\n                                            addError(\"An error occurred while logging you in\")\n                                            console.log(err)\n                                        }\n                                    })\n                                }}\n                            >Log in\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n            <Backdrop className={classes.backdrop} open={open}>\n                <Box className={classes.loading}>\n                    <Typography className={classes.loadingTypography}>\n                        Loading your data!\n                    </Typography>\n                    <CircularProgress color=\"inherit\"/>\n                </Box>\n            </Backdrop>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authLogin: (username, password) => dispatch(authLogin(username, password)),\n        googleLogin: (googleToken) => dispatch(googleOAuthLogin(googleToken)),\n        addError: (text) => dispatch(addAlert(text, \"error\")),\n    };\n};\n\n\nexport default connect(null, mapDispatchToProps)(SignupComponent)","import Chip from \"@material-ui/core/Chip\";\nimport React, {useEffect, useState} from 'react';\nimport DoneIcon from '@material-ui/icons/Done';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: white,\n        alignItems: 'left',\n        display: 'flex',\n    },\n    chip: {\n        marginRight: 15,\n    }\n}));\n\nconst ChipBox = ({joinable, joined, owned, changeValues}) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Chip\n                className={classes.chip}\n                label=\"Joinable\"\n                onClick={() => (changeValues(!joinable, joined, owned))}\n                color={joinable ? \"secondary\" : \"default\"}\n                icon={joinable ? <DoneIcon/> : \"\"}\n            />\n            <Chip\n                className={classes.chip}\n                label=\"Joined\"\n                onClick={() => (changeValues(joinable, !joined, owned))}\n                color={joined ? \"secondary\" : \"default\"}\n                icon={joined ? <DoneIcon/> : \"\"}\n            />\n            <Chip\n                className={classes.chip}\n                label=\"Owned\"\n                onClick={() => (changeValues(joinable, joined, !owned))}\n                color={owned ? \"secondary\" : \"default\"}\n                icon={owned ? <DoneIcon/> : null}\n            />\n        </div>\n    )\n}\n\nexport default ChipBox;","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 300,\n        maxHeight: 310,\n        width: '50vw',\n        minWidth: 250,\n    },\n    media: {\n        height: 140,\n    },\n    primaryButton: {\n        color: theme.palette.primary.dark,\n    },\n    secondryButton: {\n        color: theme.palette.secondary.dark,\n    }\n}));\n\nconst EventCard = ({event}) => {\n    const classes = useStyles()\n\n    let date = new Date(event.date_time)\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={event.picture}\n                    title={event.name}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n                        {event.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" noWrap>\n                        Date: {`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" noWrap>\n                        Location: {event.address}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button className={classes.primaryButton}>Join</Button>\n                <Button className={classes.primaryButton}>Edit</Button>\n                <Button className={classes.secondryButton}>Details</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default EventCard","import {connect} from \"react-redux\";\nimport React, {useEffect, useState} from 'react';\nimport {history} from \"../App\";\nimport {home, login} from \"../constants/pagesurls\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {AddBox, AddCircle} from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {eventListURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {authSignup, googleOAuthLogin} from \"../actions/authActions\";\nimport {changePicture, createCar} from \"../actions/profileActions\";\nimport {addAlert} from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport ChipBox from \"../components/event/ChipBox\";\nimport EventCard from \"../components/event/EventCard\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '100vw',\n        backgroundColor: white,\n        alignItems: 'left',\n        flexDirection: 'column',\n        display: 'flex',\n    },\n    firstLine: {\n        \"& > h2\": {\n            marginBottom: 5,\n        },\n        display: 'inline',\n        alignItems: \"initial\",\n        marginTop: 13,\n        marginLeft: 20,\n    },\n    plusButton: {\n        marginLeft: 10,\n        color: theme.palette.secondary.dark,\n    },\n    cardGridItem: {\n        marginTop: 3,\n    },\n    gridContainer: {\n        width: '90%',\n        marginTop: 3,\n        alignItems: 'center',\n        flexDirection: 'left',\n        display: 'flex',\n        marginLeft: 10,\n    }\n\n}));\n\nconst HomeContainer = ({isAuthenticated, search, token}) => {\n    useEffect(() => {\n        if (!isAuthenticated) history.push(login)\n\n        if (events === null)\n            axios\n                .get(eventListURL(joinable, joined, owned), headers('application/json', token))\n                .then((response) => {\n                    setEvents(response.data)\n                })\n                .catch((err) => {\n                    addAlert(\"An Error occurred while retrieving events\")\n                });\n    });\n    const classes = useStyles();\n\n\n    const [joinable, setJoinable] = useState(true);\n    const [joined, setJoined] = useState(true);\n    const [owned, setOwned] = useState(false);\n    const [events, setEvents] = useState(null);\n    let eventsFiltered = events;\n\n    if (events !== null)\n        eventsFiltered = eventsFiltered.filter((item) => (item.name.includes(search)))\n\n    const changeValues = (joinable, joined, owned) => {\n        setJoinable(joinable)\n        setJoined(joined);\n        setOwned(owned);\n        setEvents(null);\n    }\n\n    let eventCards = []\n    if (eventsFiltered !== null)\n        eventCards = eventsFiltered.map((item) => (\n            <Grid key={item.id} item className={classes.cardGridItem}>\n                <EventCard event={item}/>\n            </Grid>\n        ))\n    console.log(eventsFiltered)\n    return (\n        <div className={classes.root}>\n            <div className={classes.firstLine}>\n                <Typography variant=\"h2\">\n                    Events\n                    <IconButton className={classes.plusButton} aria-label=\"add\">\n                        <AddBox fontSize=\"large\"/>\n                    </IconButton>\n                </Typography>\n\n\n                <ChipBox joined={joined} joinable={joinable} owned={owned} changeValues={changeValues}/>\n            </div>\n            <Grid container xs={12} spacing={3} className={classes.gridContainer}>\n                {eventCards}\n            </Grid>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        isAuthenticated: state.auth.token !== undefined,\n        search: state.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addError: (text) => dispatch(addAlert(text, \"error\")),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer)","import DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport {nominatimToPrimarySecondary} from \"../../utils\";\n\n\nconst PositionsDialog = ({open, close, positions, selectItem}) => {\n    let options = positions.map(item => {\n        let {primary, secondary} = nominatimToPrimarySecondary(item)\n        return (<ListItem\n            key={item.place_id}\n            button\n            onClick={() => {\n                selectItem(item)\n            }}\n\n            onClick={() => {\n                selectItem(item)\n                close()\n            }}\n        >\n            <ListItemText primary={primary}\n                          secondary={secondary}/>\n        </ListItem>)\n    })\n\n    return (\n        <Dialog\n            open={open}\n            onClose={close}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{\"Which one is it?\"}</DialogTitle>\n            <DialogContent>\n                <List>\n                    {options}\n                </List>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default PositionsDialog;","import React, {useEffect, useState} from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {authLogout} from \"../actions/authActions\";\nimport {setSearch} from \"../actions/searchActions\";\nimport {connect} from \"react-redux\";\nimport {addAlert} from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport PositionsDialog from \"../components/map/PositionsDialog\";\nimport {nominatimToPrimarySecondary} from \"../utils\";\nimport {Map, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    map: {\n        width: '200px',\n        height: '200px'\n    },\n    mapBox: {\n        display: \"block\",\n    }\n\n}));\n\n\nconst MapContainer = (props) => {\n\n        useEffect(() => {\n            if (pos === \"\" && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    setPos(`SRID=4326;POINT (${position.coords.latitude} ${position.coords.longitude})`)\n                    setLatitude(position.coords.latitude)\n                    setLongitude(position.coords.longitude)\n                })\n            }\n        })\n\n        //will be props\n        const [addr, setAddr] = useState(\"\");\n        const [pos, setPos] = useState(\"\");\n\n        const [latitude, setLatitude] = useState(44.629430);\n        const [longitude, setLongitude] = useState(10.948296);\n        const classes = useStyles();\n        let [addrError, setAddrError] = useState(false)\n\n        const [lastRequest, setLastRequest] = useState(new Date())\n\n        const [open, setOpen] = useState(false);\n        const [positions, setPositions] = useState([]);\n\n        const [zoom, setZoom] = useState(13)\n\n        const selectItem = (item) => {\n            let {primary, secondary} = nominatimToPrimarySecondary(item);\n            setAddr(`${primary} ${secondary}`);\n            setPos(`SRID=4326;POINT (${item.lat} ${item.lon})`)\n            setLatitude(parseInt(item.lat))\n            setLongitude(parseInt(item.lon))\n        }\n\n        const getMapData = () => {\n            axios\n                .get(`https://nominatim.openstreetmap.org/search/?q=${encodeURI(addr)}&format=json&limit=3&addressdetails=1&dedupe=1`,)\n                .then(res => {\n                    setPositions(res.data);\n                    setOpen(true)\n                })\n                .catch(err => {\n                    props.addAlert(\"An error occurred while retrieving positions\")\n                })\n        }\n\n        const click = () => {\n            let now = new Date()\n            if (now - lastRequest > 1000) {\n                getMapData()\n            } else {\n                console.log(\"will\")\n                setTimeout(getMapData, now - lastRequest);\n            }\n        }\n        return (\n            <div className={classes.root}>\n                <FormControl variant=\"outlined\" className={classes.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={8} sm={4}>\n                            <TextField fullWidth id=\"address\" label=\"Address\" placeholder=\"via Pietro Vivarelli 10, Modena\"\n                                       value={addr}\n                                       onChange={(input) => {\n                                           let name = input.target.value;\n                                           if (name.length > 0) {\n                                               setAddrError(false)\n                                           } else {\n                                               setAddrError(true)\n                                           }\n                                           setAddr(name);\n                                       }}\n                                       onBlur={(input) => {\n                                           if (input.target.value === \"\") {\n                                               setAddrError(true)\n                                           }\n                                       }}\n                                       onKeyPress={(ev) => {\n                                           if (ev.key === 'Enter') {\n                                               click()\n                                           }\n                                       }}\n                                       error={addrError}\n                                       required\n                                       helperText={addrError ? \"Required\" : \"\"}\n                                       autoComplete=\"address-line1\"/>\n                        </Grid>\n                        <Grid item xs={4} sm={2}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.button}\n                                startIcon={<SearchIcon/>}\n                                disabled={!addr.length}\n                                onClick={click}\n                            >\n                                Search\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Box className={classes.mapBox}>\n                        <Map\n                            center={[latitude, longitude]}\n                            zoom={zoom}\n                            className={classes.map}\n                        >\n                            <TileLayer\n                                attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            <Marker\n                                draggable={true}\n                                onDragend={(ev) => {\n                                    console.log(ev)\n                                }}\n                                position={{lat: latitude, lng: longitude}}\n                            >\n                                <Popup minWidth={90}>\n                                            <span>\n                                              {\"ciao\"}\n                                            </span>\n                                </Popup>\n                            </Marker>\n                        </Map>\n                    </Box>\n\n\n                </FormControl>\n                <PositionsDialog open={open} close={() => {\n                    setOpen(false)\n                }} positions={positions} selectItem={selectItem}/>\n            </div>\n        )\n    }\n;\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addAlert: (text) => (dispatch(addAlert(text, \"error\"))),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(MapContainer);","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\n// import requireAuth from \"./requireAuth\"; // deprecated\n\nimport {createBrowserHistory} from \"history\";\nimport AuthContainer from \"./containers/AuthContainer\";\nimport SignupComponent from \"./components/auth/SignupComponent\";\nimport LoginComponent from \"./components/auth/LoginComponent\";\nimport HomeContainer from \"./containers/HomeContainer\";\nimport MapContainer from \"./containers/Map\";\n\nconst history = createBrowserHistory();\n\n\nconst BaseRouter = props => (\n    <div>\n        <Switch>\n            {/*<Route exact path=\"/\">*/}\n            {/*    <LandingPageContainer/>*/}\n            {/*</Route>*/}\n            <Route exact path=\"/login\">\n                <AuthContainer>\n                    <LoginComponent/>\n                </AuthContainer>\n            </Route>\n            <Route exact path=\"/signup\">\n                <AuthContainer>\n                    <SignupComponent/>\n                </AuthContainer>\n            </Route>\n            <Route exact path=\"/home\" component={HomeContainer}/>\n            {/*<Route exact path=\"/profile/:id\" component={ProfileContainer}/>*/}\n            {/*<Route exact path=\"/my-profile\" component={MyProfileContainer}/>*/}\n            {/*<Route exact path=\"/events/:id\" component={EventContainer}/>*/}\n            <Route path=\"*\" component={MapContainer}/>\n        </Switch>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AlertItem(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    let alert = props.alert;\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <Alert\n                    severity={alert.style}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\"/>\n                        </IconButton>\n                    }\n                >\n                    {alert.text}\n                </Alert>\n            </Collapse>\n        </div>\n    );\n}","import React from 'react'\nimport AlertItem from \"../components/alerts/AlertItem\";\n\nexport default function AlertContainer(props) {\n    let alertItems = props.alerts.map((alert) => (\n        <AlertItem key={alert.id} alert={alert}/>\n    ));\n\n    return (\n        <div className=\"alert-container\">\n            {alertItems}\n        </div>\n    )\n\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#52c7b8',\n            main: '#009688',\n            dark: '#00675b',\n            contrastText: '#000',\n        },\n        secondary: {\n            light: '#ffc246',\n            main: '#ff9100',\n            dark: '#c56200',\n            contrastText: '#000',\n        },\n        background: {\n            paper: '#f0f0f0',\n        }\n    },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function NotificationItem({notification, history}) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <ListItem alignItems=\"flex-start\" disabled={notification.read} component=\"a\" href=\"#\"\n                      onClick={history.push(notification.url)}>\n                <ListItemAvatar>\n                    <ArrowForwardIosIcon/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={notification.title}\n                    secondary={notification.content}\n                />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\"/>\n        </>\n    );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as pagesURL from \"../../constants/pagesurls\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {fade} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport theme from \"../../theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport NotificationItem from \"./NotificationItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Box from \"@material-ui/core/Box\";\nimport {home, login} from \"../../constants/pagesurls\";\nimport {signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authLogout} from \"../../actions/authActions\";\nimport logo from \"../../icons/logo.svg\"\nimport {setSearch} from \"../../actions/searchActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n        display: 'none',\n        outline: 0,\n        marginLeft: 10,\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 5,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    logo: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        maxHeight: '60px',\n        outline: 0,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerTitle: {\n        margin: 10,\n    },\n    logout: {\n        marginLeft: 20,\n    }\n}));\n\nfunction NavBar({isAuthenticated, notifications, notificationsNumber, authLogout, setSearch, search}) {\n    const classes = useStyles();\n\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setDrawerOpen(open);\n    };\n\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const logoutButton = (\n        <Button color={\"inherit\"} className={classes.logout} onClick={() => {\n            handleMobileMenuClose()\n            authLogout()\n        }}> Logout</Button>\n    );\n\n    const menuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem\n                onClick={(event) => {\n                    toggleDrawer(true)(event);\n                    handleMobileMenuClose()\n                }}>\n                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\">\n                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n            <MenuItem>\n                {logoutButton}\n            </MenuItem>\n        </Menu>\n    );\n\n    let notificationListItem = notifications.map((notification) => (\n        <NotificationItem key={notification.id} notification={notification}/>\n    ));\n\n    const notificationDrawer = (\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n            <div className={classes.list}\n                 role=\"presentation\"\n                 onClick={toggleDrawer(false)}\n                 onKeyDown={toggleDrawer(false)}>\n                <Divider/>\n                <Typography className={classes.drawerTitle} variant=\"h6\">\n                    Notifications:\n                </Typography>\n                <Divider/>\n                <List>\n                    {notificationListItem}\n                </List>\n            </div>\n        </Drawer>\n    );\n\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <button className={classes.logo} href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n\n                        <img src={logo} alt=\"logo\" className={classes.logo}/>\n                    </button>\n                    <Typography className={classes.title} variant=\"h6\" noWrap component=\"button\" href=\"#\"\n                                onClick={() => {\n                                    history.push(home)\n                                }}>\n                        DM Project\n                    </Typography>\n                    {isAuthenticated ? (\n                        <>\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon/>\n                                </div>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{'aria-label': 'search'}}\n                                    onChange={(input) => {\n                                        console.log(input.target.value)\n                                        setSearch(input.target.value)\n                                    }}\n                                />\n                            </div>\n\n                            <div className={classes.grow}/>\n                            <div className={classes.sectionDesktop}>\n                                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\"\n                                            onClick={toggleDrawer(true)}>\n                                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                                        <NotificationsIcon/>\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={() => {\n                                    }}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle/>\n                                </IconButton>\n                                {logoutButton}\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton\n                                    aria-label=\"show more\"\n                                    aria-controls={mobileMenuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMobileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <MoreIcon/>\n                                </IconButton>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.grow}/>\n                            <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={() => {\n                                history.push(signup)\n                            }}>\n                                Signup\n                            </Button>\n                            <Button color=\"inherit\" disableElevation onClick={() => {\n                                history.push(login)\n                            }}>\n                                Login\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {notificationDrawer}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n        notificationsNumber: state.notifications.notifications.filter((notification) => (notification.read)).length,\n        notifications: state.notifications.notifications,\n        search: state.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authLogout: () => dispatch(authLogout()),\n        setSearch: (search) => dispatch(setSearch(search)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import {SET_SEARCH} from \"./types\";\n\nexport const setSearch = (search) => dispatch => (\n    dispatch({\n        type: SET_SEARCH,\n        search: search,\n    })\n)","import React, {Component, useEffect} from 'react';\nimport './App.css';\nimport BaseRouter from \"./routes\";\nimport {authCheckState, authLogout} from \"./actions/authActions\";\nimport AlertContainer from \"./containers/AlertContainer\";\nimport {connect} from \"react-redux\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nimport NavBar from \"./components/navbar/NavBar\";\nimport theme from \"./theme\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\nexport const history = createBrowserHistory();\n\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.onTryAutoSignup()\n    });\n\n    return (\n        <Router history={history}>\n            <ThemeProvider theme={theme}>\n                <NavBar/>\n                <AlertContainer alerts={props.alerts}/>\n                <BaseRouter/>\n            </ThemeProvider>\n        </Router>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.profile.user.username,\n        alerts: state.alerts\n    };\n};\n\n// authomatic auth check\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(authCheckState()),\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/types\";\nimport {updateObject} from \"../utils\";\n\nconst initialState = {\n    token: undefined,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: undefined\n    });\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_ERROR:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import * as actionTypes from \"../actions/types\";\nimport uuid from \"node-uuid\";\nimport {ADD_ALERT, REMOVE_ALERT, REMOVE_ALL_ALERTS} from \"../actions/types\";\n\nconst initialState = [];\n\nconst addAlert = (state, action) => {\n    window.scrollTo(0, 0); // scroll top in order to show alert\n    return [\n        ...state,\n        {\n            text: action.text,\n            style: action.style,\n            id: uuid()\n        }\n    ];\n};\n\nconst removeAlert = (state, action) => {\n    return state.filter(alert => {\n        return alert.id !== action.id;\n    });\n};\n\nconst removeAllAlerts = (state, action) => {\n    return initialState;\n};\n\nconst alertsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALERT:\n            return addAlert(state, action);\n        case REMOVE_ALERT:\n            return removeAlert(state, action);\n        case REMOVE_ALL_ALERTS:\n            return removeAllAlerts(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default alertsReducer;","import {updateObject} from \"../utils\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"../actions/types\";\n\nconst initialState = {\n    id: \"\",\n    picture: \"\",\n    score: 0,\n    carSet: [],\n    averageVote: 0,\n    receivedFeedback: [],\n    givenFeedback: [],\n    user: {},\n    loading: false,\n};\n\nconst profileStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst getProfileSuccess = (state, action) => {\n    let {id, picture, score, carSet, averageVote, receivedFeedback, givenFeedback, user} = action;\n    return updateObject(state, {\n        loading: false,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    })\n};\n\nconst profilePictureUpdate = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        picture: action.picture\n    })\n};\n\nconst profileError = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    })\n};\n\nconst userDataUpdate = (state, action) => {\n    let {id, firstName, lastName, email} = action;\n    let user = state.user;\n    user.id = id;\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.email = email;\n    return updateObject(state, {\n        loading: false,\n        user: user\n    })\n};\n\nconst clearProfileData = (state, action) => {\n    return initialState;\n};\n\nconst carCreate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let carSet = state.carSet;\n    carSet.push({id: id, name: name, totSeats: totSeats, fuel: fuel, consumption: consumption});\n    state.loading = false;\n    return state;\n};\n\nconst carUpdate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let index = state.carSet.findIndex((car) => (car.id === id));\n    state.carSet[index].name = name;\n    state.carSet[index].totSeats = totSeats;\n    state.carSet[index].fuel = fuel;\n    state.carSet[index].consumption = fuel;\n    state.loading = false;\n    return state;\n};\n\nconst carDelete = (state, action) => {\n    let carSet = state.carSet.filter((car) => (car.id !== action));\n    return updateObject(state, {\n        carSet: carSet,\n        loading: false,\n    })\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROFILE_OP_START:\n            return profileStart(state, action);\n        case GET_PROFILE_SUCCESS:\n            return getProfileSuccess(state, action);\n        case PROFILE_PICTURE_UPDATE:\n            return profilePictureUpdate(state, action);\n        case PROFILE_OP_ERROR:\n            return profileError(state, action);\n        case USER_DATA_UPDATE:\n            return userDataUpdate(state, action);\n        case CLEAR_PROFILE_DATA:\n            return clearProfileData(state, action);\n        case CAR_CREATE:\n            return carCreate(state, action);\n        case CAR_UPDATE:\n            return carUpdate(state, action);\n        case CAR_DELETE:\n            return carDelete(state, action);\n        default:\n            return state;\n\n\n    }\n};\n\nexport default profileReducer;","import {updateObject} from \"../utils\";\nimport {\n    CLEAR_NOTIFICATIONS,\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    notifications: []\n};\n\nconst notificationsStart = (state, action) => (\n    updateObject(state, {\n        loading: true\n    })\n);\n\nconst notificationsError = (state, action) => (\n    updateObject(state, {\n        loading: false\n    })\n);\n\nconst getNotificationSuccess = (state, action) => (\n    updateObject(state, {\n        notifications: action.notifications\n    })\n);\n\nconst notificationUpdate = (state, action) => {\n    let {id, read} = action;\n    let index = state.notifications.findIndex((notification) => (notification.id === id));\n    state.notifications[index].read = action;\n    return state\n};\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NOTIFICATIONS_START:\n            return notificationsStart(state, action);\n        case NOTIFICATIONS_ERROR:\n            return notificationsError(state, action);\n        case GET_NOTIFICATIONS_SUCCESS:\n            return getNotificationSuccess(state, action);\n        case NOTIFICATION_UPDATE:\n            return notificationUpdate(state, action);\n        case CLEAR_NOTIFICATIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default notificationReducer;","import {SET_SEARCH} from \"../actions/types\";\n\nconst initialState = \"\"\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_SEARCH:\n            return action.search;\n        default:\n            return state;\n    }\n}\n\nexport default searchReducer;","import {combineReducers} from \"redux\";\nimport authReducer from \"./authReducer\";\nimport alertsReducer from \"./alertReducer\";\nimport profileReducer from \"./profileReducer\";\nimport notificationReducer from \"./notificationReducer\";\nimport searchReducer from \"./searchReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    alerts: alertsReducer,\n    profile: profileReducer,\n    notifications: notificationReducer,\n    search: searchReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n        applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}