{"version":3,"sources":["constants/constants.js","constants/apiurls.js","actions/alertActions.js","actions/types.js","utils.jsx","actions/profileActions.js","actions/notificationsActions.js","actions/authActions.js","containers/AuthContainer.jsx","constants/pagesurls.js","components/auth/signup/PersonalInfoForm.jsx","components/auth/signup/CarForm.jsx","components/auth/signup/SummaryData.jsx","components/auth/SignupComponent.jsx","routes.jsx","components/alerts/AlertItem.jsx","containers/AlertContainer.jsx","theme.jsx","components/navbar/NotificationItem.jsx","components/navbar/NavBar.jsx","App.js","serviceWorker.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/profileReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js"],"names":["APP_CLIENTID","APP_SECRET","apiBaseUrl","serverURL","currentProfileURL","tokenURL","signupURL","carsListURL","profilePk","profilesURL","notificationListURL","addAlert","text","style","type","alertError","error","dispatch","response","JSON","stringify","data","toString","updateObject","oldObject","updatedProperties","headers","content_type","access_token","otherHeaders","otherOptions","fetchProfile","localStorage","getItem","axios","get","then","res","id","user","picture","score","carSet","averageVote","receivedFeedback","givenFeedback","setItem","getSuccess","catch","retrieveNotifications","notifications","success","token","checkAuthTimeout","expirationTime","refresh_token","setTimeout","refreshAuth","post","qs","client_id","client_secret","grant_type","expirationDate","Date","getTime","authSignup","username","first_name","last_name","email","password","authLogin","authLogout","clear","useStyles","makeStyles","theme","root","minWidth","backgroundColor","white","alignItems","flexDirection","display","formPaper","flexWrap","margin","maxWidth","palette","background","paper","inline","connect","state","isAuthenticated","undefined","auth","children","useEffect","history","push","classes","Container","className","Paper","marginBottom","spacing","width","form","button","marginRight","imageInput","imageProgress","marginLeft","imgPreview","maxHeight","minHeight","PersonalInfoForm","firstName","setFirstName","lastName","setLastName","setUsername","usernameError","setUsernameError","setPassword","passwordError","setPasswordError","setEmail","emailError","setEmailError","image","setImage","imageURL","setImageURL","useState","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","usernameHelperText","setUsernameHelperText","validateEmail","input","target","value","test","validateUsername","validatePassword","Avatar","src","Grid","container","item","xs","sm","TextField","variant","fullWidth","label","placeholder","onChange","autoComplete","required","helperText","onBlur","Button","color","component","justify","startIcon","PhotoCamera","Input","controlled","fileReader","FileReader","file","files","onloadend","result","readAsDataURL","CircularProgress","size","CarForm","name","setName","totSeats","setTotSeats","consumption","setConsumption","fuel","setFuel","nameError","setNameError","FormControl","length","InputLabel","Select","labelId","MenuItem","step","InputProps","endAdornment","InputAdornment","position","val","instruction","carDivider","marginTop","SummaryData","carName","Typography","readOnly","Divider","inputProps","title","padding","instructions","loading","backdrop","zIndex","drawer","loadingTypography","setPicture","formData","FormData","append","put","successPictureUpdate","postCar","profileId","tot_avail_seats","createCarSuccess","createCar","setCarName","open","setOpen","steps","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","console","log","disabled","isStepValid","align","Stepper","orientation","map","index","stepProps","labelProps","optional","completed","Step","key","StepLabel","StepContent","getStepContent","onClick","Backdrop","Box","BaseRouter","createBrowserHistory","props","exact","path","AlertItem","alert","Collapse","in","Alert","severity","action","IconButton","aria-label","fontSize","AlertContainer","alertItems","alerts","createMuiTheme","primary","light","main","dark","contrastText","secondary","responsiveFontSizes","NotificationItem","notification","ListItem","read","href","url","ListItemAvatar","ListItemText","content","grow","flexGrow","menuButton","textDecoration","outline","breakpoints","up","search","borderRadius","shape","fade","common","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","logo","list","fullList","drawerTitle","logout","notificationsNumber","filter","mobileMoreAnchorEl","setMobileMoreAnchorEl","drawerOpen","setDrawerOpen","toggleDrawer","event","isMobileMenuOpen","Boolean","logoutButton","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","Badge","badgeContent","aria-controls","aria-haspopup","notificationListItem","notificationDrawer","Drawer","anchor","role","onKeyDown","List","AppBar","Toolbar","alt","noWrap","InputBase","edge","currentTarget","disableElevation","profile","onTryAutoSignup","ThemeProvider","window","location","hostname","match","initialState","authStart","authSuccess","authFail","authReducer","scrollTo","uuid","removeAlert","removeAllAlerts","alertsReducer","profileStart","getProfileSuccess","profilePictureUpdate","profileError","userDataUpdate","clearProfileData","carCreate","carUpdate","findIndex","car","carDelete","profileReducer","notificationsStart","notificationsError","getNotificationSuccess","notificationUpdate","notificationReducer","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2896c699.chunk.js","sourcesContent":["import {home} from \"./pagesurls\";\n\nexport const CLIENT_ID = \"283420556311-30r26g3mtt5odkqmit6u7onam3qrul16.apps.googleusercontent.com\";\nexport const CLIENT_SECRET = \"KsSTbOaPDbxEbEGqkcyWl3-v\";\nexport const APP_CLIENTID = \"4mOLHPfJL0zueHOlawvJXsdnImpjOv3PmLdmm3NT\";\nexport const APP_SECRET = \"FW4dYuZsLmE6PQHk7qrPAc4shQhdx2hknqNOh58XO3JQ6PFI8um2z6wyJubxF6hKNOOOJfZUQ67jm5ApN5HJioq4XsNAGSbCLiQZqrqfo6jiy67ddpvMOl3Be8SATFSL\";\n\nexport const serverURL = \"http://localhost:8000/\";\n\nexport const status = [\n    'Joinable',\n    'Computing',\n    'Computed'\n];\n\nexport const defaultProfilePic = serverURL + \"media/default-profile.jpg\"","import {serverURL} from \"./constants\";\n\nlet apiBaseUrl = serverURL + 'api/v0.1/';\n\nexport const eventListURL = (joinable = true, joined = true, owned = false) => (apiBaseUrl + `events/?joined=${joined}&joinable=${joinable}&owned=${owned}`);\n\nexport const eventCreateURL = () => (apiBaseUrl + 'events/');\n\nexport const eventDetailURL = (eventPk) => (`${eventCreateURL()}${eventPk}/`);\n\nexport const eventJoinURL = (eventPk) => (`${eventDetailURL(eventPk)}participants/`);\n\nexport const participationEditURL = (eventPk, participantPk) => (`${eventJoinURL(eventPk)}${participantPk}/`);\n\nexport const currentProfileURL = () => (apiBaseUrl + 'current-profile/');\n\nexport const convertTokenURL = () => (apiBaseUrl + 'auth/convert-token');\n\nexport const tokenURL = () => (apiBaseUrl + 'auth/token');\n\nexport const signupURL = () => (apiBaseUrl + 'signup/');\n\nexport const profilesURL = (profilePk) => (apiBaseUrl + `profiles/${profilePk}/`);\n\nexport const carsListURL = (profilePk) => (`${profilesURL(profilePk)}cars/`);\n\nexport const carsDetailURL = (profilePk, carPk) => (`${carsListURL}${carPk}/`);\n\nexport const createFeedbackURL = (eventPk, receiverParticipantPk) => (`${participationEditURL(eventPk, receiverParticipantPk)}feedback/`);\n\nexport const editFeedbackURL = (eventPk, receiverParticipantPk, feedbackPk) => (`${createFeedbackURL(eventPk, receiverParticipantPk)}${feedbackPk}/`);\n\nexport const notificationListURL = () => (`${currentProfileURL()}notifications/`);\nexport const notificationEditURL = (notificationPk) => (`${notificationListURL()}${notificationPk}/`)\n\n\n","import * as actionTypes from \"./types\";\n\nexport const addAlert = (text, style) => {\n    return {\n        type: actionTypes.ADD_ALERT,\n        text: text,\n        style: style\n    };\n};\n\nexport const removeAllAlerts = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALL_ALERTS\n    });\n};\n\nexport const removeAlert = (id) => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALERT,\n        id: id\n    });\n};\n\n\nexport const alertError = (error) => (dispatch) => {\n    if (error.response) {\n        dispatch(addAlert(JSON.stringify(error.response.data), \"error\"));\n    } else {\n        dispatch(addAlert(error.toString(), \"error\"));\n    }\n};\n\n","/*\n    Alerts\n */\nexport const ADD_ALERT = \"ADD_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REMOVE_ALL_ALERTS = \"REMOVE_ALL_ALERTS\";\n\n/*\n    Auth\n*/\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n/*\n    Profile\n */\nexport const PROFILE_OP_START = \"PROFILE_OP_START\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const PROFILE_PICTURE_UPDATE = \"PROFILE_PICTURE_UPDATE\";\nexport const PROFILE_OP_ERROR = \"PROFILE_OP_ERROR\";\nexport const USER_DATA_UPDATE = \"USER_DATA_UPDATE\";\nexport const CLEAR_PROFILE_DATA = \"CLEAR_PROFILE_DATA\";\n\n/*\n    Profile - Car\n */\nexport const CAR_CREATE = \"CAR_CREATE\";\nexport const CAR_UPDATE = \"CAR_UPDATE\";\nexport const CAR_DELETE = \"CAR_DELETE\";\n\n/*\n    Notifications\n */\nexport const NOTIFICATIONS_START = \"NOTIFICATIONS_START\";\nexport const NOTIFICATIONS_ERROR = \"NOTIFICATIONS_ERROR\";\nexport const GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\nexport const NOTIFICATION_UPDATE = \"NOTIFICATION_UPDATE\";\nexport const CLEAR_NOTIFICATIONS = \"CLEAR_NOTIFICATIONS\";","export const isAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n        return false;\n    } else {\n        const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n        return expirationDate > new Date();\n    }\n};\n\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\n/**\n *\n * @param {string}content_type\n * @param {string}access_token\n * @param {{}}otherHeaders\n * @param otherOptions\n */\nexport const headers = (content_type, access_token = null, otherHeaders = {}, otherOptions = {}) => {\n    let headers = {\n        headers: {\n            \"Content-type\": content_type,\n            ...otherHeaders\n        },\n        ...otherOptions\n    };\n    if (access_token != null) headers = {\n        ...headers, headers: {...headers.headers, \"Authorization\": `Bearer ${access_token}`}\n    };\n\n    return headers\n};","import axios from \"axios\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"./types\";\nimport {carsListURL, currentProfileURL, signupURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {addAlert, alertError} from \"./alertActions\";\nimport {authLogout} from \"./authActions\";\n\n\nconst start = () => (\n    {\n        type: PROFILE_OP_START\n    }\n);\n\nconst getSuccess = (id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback) => (\n    {\n        type: GET_PROFILE_SUCCESS,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    }\n);\n\nconst successPictureUpdate = (picture) => (\n    {\n        type: PROFILE_PICTURE_UPDATE,\n        picture,\n    }\n);\n\nconst fail = () => (\n    {\n        type: PROFILE_OP_ERROR,\n    }\n);\n\nconst changeUserDataSuccess = (id, firstName, lastName, email) => (\n    {\n        type: USER_DATA_UPDATE,\n        id,\n        firstName,\n        lastName,\n        email\n    }\n);\n\nconst createCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_CREATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst changeCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_UPDATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst deleteCarSuccess = (id) => (\n    {\n        type: CAR_DELETE,\n        id,\n    }\n);\n\nexport const clearProfileData = () => (dispatch) => (dispatch(\n        {\n            type: CLEAR_PROFILE_DATA\n        })\n);\n\n\nexport const fetchProfile = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            currentProfileURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback} = res.data;\n            localStorage.setItem(\"profile_id\", id);\n            return dispatch(getSuccess(id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback));\n        })\n        .catch(error => {\n            dispatch(fail());\n            dispatch(alertError(error));\n            return error;\n        })\n};\n\n\nexport const changePicture = (picture) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"picture\", picture, picture.name);\n    return axios\n        .put(\n            currentProfileURL(),\n            formData,\n            headers('multipart/form-data', access_token)\n        )\n        .then(res => {\n            dispatch(successPictureUpdate(res.data.picture));\n            dispatch(addAlert(\"Immagine modificata con successo!\", \"success\"));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const changeUserData = (first_name, last_name, email, password = null) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let data = {\n        first_name: first_name,\n        last_name: last_name,\n        email: email,\n        password: password\n    };\n    if (password != null) {\n        data.password = password;\n    }\n    return axios\n        .put(\n            signupURL(),\n            data,\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, firstName, lastName, email} = res.data;\n            dispatch(changeUserDataSuccess(id, firstName, lastName, email));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        });\n};\n\n\nexport const deleteUser = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n\n    return axios\n        .delete(\n            signupURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            addAlert(\"You have been deleted from the system!\", \"success\");\n            dispatch(authLogout());\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const createCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .post(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(createCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const updateCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .put(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(changeCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const deleteCar = (id) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n    return axios\n        .delete(\n            carsListURL(profileId),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(deleteCarSuccess(id));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n","import {notificationEditURL, notificationListURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {alertError} from \"./alertActions\";\nimport axios from \"axios\";\nimport {\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START,\n    CLEAR_NOTIFICATIONS\n} from \"./types\";\n\nconst start = () => (\n    {\n        type: NOTIFICATIONS_START\n    }\n);\n\nconst fail = () => (\n    {\n        type: NOTIFICATIONS_ERROR\n    }\n);\n\nconst getSuccess = (notifications) => (\n    {\n        type: GET_NOTIFICATIONS_SUCCESS,\n        notifications\n    }\n);\n\n/**\n *\n * @param id\n * @param {boolean} read\n */\nconst readSuccess = (id, read) => (\n    {\n        type: NOTIFICATION_UPDATE,\n        id,\n        read\n    }\n);\n\n\nexport const clearNotifications = () => (dispatch) => {\n    dispatch({type: CLEAR_NOTIFICATIONS})\n};\n\nexport const retrieveNotifications = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            notificationListURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(getSuccess(res.data))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const readNotification = (notificationId, read = true) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .put(\n            notificationEditURL(notificationId),\n            {\n                read: read\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(readSuccess(notificationId, read))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n","import axios from \"axios\";\nimport {convertTokenURL, tokenURL, signupURL} from \"../constants/apiurls\";\nimport {alertError} from './alertActions';\nimport {AUTH_ERROR, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"./types\";\nimport loginURL from \"../constants/apiurls\";\nimport {APP_CLIENTID, APP_SECRET} from \"../constants/constants\";\nimport * as qs from \"qs\";\nimport {headers} from \"../utils\";\nimport {clearProfileData, fetchProfile} from \"./profileActions\";\nimport {clearNotifications, retrieveNotifications} from \"./notificationsActions\";\n\nconst start = () => ({\n    type: AUTH_START,\n});\n\nconst success = (token) => ({\n    type: AUTH_SUCCESS,\n    token: token\n});\n\nconst fail = () => ({\n    type: AUTH_ERROR\n});\n\nconst logout = () => {\n    localStorage.clear();\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime, refresh_token) => dispatch => {\n    setTimeout(() => {\n        dispatch(refreshAuth(refresh_token));\n    }, expirationTime * 1000);\n};\n\nexport const refreshAuth = (refresh_token) => (dispatch) => {\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'refresh_token',\n                refresh_token: refresh_token,\n            }),\n            headers('application/x-www-form-urlencoded')\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(fetchProfile());\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const googleOAuthLogin = (google_token) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            convertTokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'convert_token',\n                backend: 'google-oauth2',\n                token: google_token\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(fetchProfile());\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authLogin = (username, password) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'password',\n                username: username,\n                password: password,\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(checkAuthTimeout(3600));\n            dispatch(retrieveNotifications());\n            return dispatch(fetchProfile());\n\n\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\n\nexport const authSignup = (username, first_name, last_name, email, password) => (dispatch) => {\n    dispatch(start());\n    // we return the promise in order to use wait till the end using \"then\"\n    return axios\n        .post(\n            signupURL(),\n            {\n                username: username,\n                first_name: first_name,\n                last_name: last_name,\n                email: email,\n                password: password\n            },\n            headers('application/json')\n        )\n        .then(res => {\n            return dispatch(authLogin(username, password))\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"access_token\");\n        if (token === undefined || token === null) {\n            dispatch(authLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem(\"expiration_date\"));\n            if (expirationDate <= new Date()) {\n                dispatch(authLogout());\n            } else {\n                dispatch(success(token));\n                dispatch(fetchProfile());\n                dispatch(retrieveNotifications());\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    };\n};\n\nexport const authLogout = () => dispatch => {\n    dispatch(logout());\n    dispatch(clearProfileData());\n    dispatch(clearNotifications());\n};\n\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {home, login} from \"../constants/pagesurls\";\nimport {connect} from \"react-redux\";\nimport {authCheckState, authLogin, googleOAuthLogin} from \"../actions/authActions\";\nimport {Container, Paper} from \"@material-ui/core\";\nimport {white} from \"color-name\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {history} from \"../App\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '100vw',\n        backgroundColor: white,\n        alignItems: 'center',\n        flexDirection: 'column',\n        display: 'flex',\n    },\n    formPaper: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 20,\n        maxWidth: '55ch',\n        minWidth: '10ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nconst AuthContainer = ({children, isAuthenticated}) => {\n    useEffect(() => {\n        if (isAuthenticated) history.push(home)\n    });\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth=\"xs\">\n            <Paper className={classes.formPaper}>\n                {children}\n            </Paper>\n        </Container>\n    )\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(AuthContainer)","export const landingPage = \"/\";\nexport const home = \"/home\";\nexport const login = \"/login\";\nexport const signup = \"/signup\";\nexport const myProfile = \"/my-profile\";\nexport const profile_id = \"/profiles/:id\";\nexport const profile = \"/profiles/\";\nexport const event_id = \"/events/:id\";\nexport const event = \"/events/\";\n","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    }\n\n}));\n\n\nconst PersonalInfoForm = ({\n                              firstName, setFirstName, lastName, setLastName, username, setUsername,\n                              usernameError, setUsernameError, password, setPassword, passwordError,\n                              setPasswordError, email, setEmail, emailError, setEmailError,\n                              image, setImage, imageURL, setImageURL\n                          }) => {\n    const classes = useStyles();\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\n    const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n    const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n    const validateEmail = (input) => {\n        if (input.target.value === null || input.target.value === \"\") {\n            setEmailError(true);\n            setEmailHelperText(\"Email is required\");\n        } else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input.target.value))) {\n            setEmailError(true);\n            setEmailHelperText(\"Not a valid email\");\n        } else {\n            setEmailError(false);\n            setEmailHelperText(\"\");\n        }\n        setEmail(input.target.value)\n    };\n\n    const validateUsername = (input) => {\n        if (input.target.value === null || \"\" === input.target.value) {\n            setUsernameError(true);\n            setUsernameHelperText(\"Username is required\");\n        } else {\n            setUsernameError(false);\n            setUsernameHelperText(\"\");\n        }\n        setUsername(input.target.value)\n    };\n\n    const validatePassword = (input) => {\n        if (input.target.value === null || input.target.value === \"\") {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password is required\");\n        } else if (!(/^[\\w!@#$%^&*]{8,}$/.test(input.target.value))) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should be at least 8 character long\");\n        } else if (!/^(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 number\");\n        } else if (!/^(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 capital\");\n        } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 lowercase\");\n        } else if (!/^(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 special character\");\n        } else {\n            setPasswordError(false);\n            setPasswordHelperText(\"\");\n        }\n        setPassword(input.target.value)\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Avatar src={imageURL !== \"\" ? imageURL : defaultProfilePic} className={classes.imgPreview}/>\n            <form className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"name\" label=\"First Name\" placeholder=\"James\"\n                                   value={firstName}\n                                   onChange={(input) => {\n                                       setFirstName(input.target.value)\n                                   }}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"surname\" label=\"Last Name\" placeholder=\"Bond\"\n                                   value={lastName}\n                                   onChange={(input) => {\n                                       setLastName(input.target.value)\n                                   }}\n                                   autoComplete=\"family-name\"/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"username\"\n                                   label=\"Username\"\n                                   value={username}\n                                   placeholder=\"jamesbond007\"\n                                   helperText={usernameHelperText}\n                                   onChange={validateUsername}\n                                   onBlur={validateUsername}\n                                   error={usernameError}\n                                   autoComplete=\"username\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"email\"\n                                   label=\"E-mail\"\n                                   placeholder=\"jamesbond@mi6.co.uk\"\n                                   type=\"email\"\n                                   error={emailError}\n                                   helperText={emailHelperText}\n                                   onChange={validateEmail}\n                                   onBlur={validateEmail}\n                                   value={email}\n                                   autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"password\"\n                                   label=\"Password\"\n                                   error={passwordError}\n                                   value={password}\n                                   type=\"password\"\n                                   helperText={passwordHelperText}\n                                   onChange={validatePassword}\n                                   onBlur={validatePassword}\n                                   autoComplete=\"new-password\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            component=\"label\"\n                            justify=\"flex-end\"\n                            className={classes.button}\n                            startIcon={<PhotoCamera/>}\n                        >Picture\n\n                            <Input className={classes.imageInput} type=\"file\" controlled onChange={(input) => {\n                                setImage(\"loading\");\n                                let fileReader = new FileReader();\n                                let file = input.target.files[0];\n                                fileReader.onloadend = () => {\n                                    setImageURL(fileReader.result)\n                                }\n                                setImage(file)\n                                fileReader.readAsDataURL(file)\n\n                            }}/>\n                            {image === \"loading\" ? (\n                                <>\n                                    <CircularProgress size=\"2ch\" className={classes.imageProgress}/>\n                                </>\n                            ) : (\n                                <>\n                                </>\n                            )}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n};\n\nexport default PersonalInfoForm;","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n}));\n\n\nconst CarForm = ({\n                     name, setName, totSeats, setTotSeats,\n                     consumption, setConsumption,\n                     fuel, setFuel,\n                 }) => {\n    const classes = useStyles();\n    let [nameError, setNameError] = useState(false)\n\n    return (\n        <div className={classes.root}>\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"car-name\" label=\"Name\" placeholder=\"Fiat Uno 1992\"\n                                   value={name}\n                                   onChange={(input) => {\n                                       let name = input.target.value;\n                                       if (name.length > 0) {\n                                           setNameError(false)\n                                       } else {\n                                           setNameError(true)\n                                       }\n                                       setName(name);\n                                   }}\n                                   onBlur={(input) => {\n                                       if (input.target.value.length < 0 || input.target.value === \"\") {\n                                           setNameError(true)\n                                       }\n                                   }}\n                                   error={nameError}\n                                   required\n                                   helperText={nameError ? \"Name is required\" : \"\"}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                            <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                    onChange={(input) => {\n                                        setTotSeats(input.target.value)\n                                    }}>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                                <MenuItem value={6}>6</MenuItem>\n                                <MenuItem value={7}>7</MenuItem>\n                                <MenuItem value={8}>8</MenuItem>\n                                <MenuItem value={9}>9</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                            <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                    onChange={(input) => {\n                                        setFuel(input.target.value)\n                                    }}>\n                                <MenuItem value={1}>Petrol</MenuItem>\n                                <MenuItem value={2}>Diesel</MenuItem>\n                                <MenuItem value={3}>Gas</MenuItem>\n                                <MenuItem value={4}>Electric</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            type=\"number\"\n                            helperText=\"Between 5 and 25\"\n                            step={0.05}\n                            label=\"Consumption\"\n                            value={consumption}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                            }}\n                            onChange={(input) => {\n                                setConsumption(input.target.value)\n                            }}\n                            onBlur={(input) => {\n                                let val = input.target.value\n                                if (val < 5)\n                                    input.target.value = 5;\n                                if (val > 20)\n                                    input.target.value = 20;\n                                setConsumption(input.target.value)\n                            }}\n\n                        />\n                    </Grid>\n\n                </Grid>\n            </FormControl>\n        </div>\n    )\n};\n\nexport default CarForm;","import {makeStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    },\n    instruction: {\n        marginBottom: theme.spacing(2),\n    },\n    carDivider: {\n        width: '123%',\n        marginTop: theme.spacing(5),\n        marginRight: '22px',\n        marginBottom: theme.spacing(5),\n    }\n\n}));\n\nconst SummaryData = ({\n                         firstName, lastName, username, password, email,\n                         imageURL, carName, totSeats, consumption, fuel,\n                     }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.instruction}>\n                Review you're data before submitting!\n            </Typography>\n            <Avatar src={imageURL !== \"\" ? imageURL : defaultProfilePic} className={classes.imgPreview}/>\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"name\" label=\"First Name\" value={firstName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"surname\" label=\"Last Name\" value={lastName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            value={username}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            type=\"email\"\n                            value={email}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            type=\"password\"\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </FormControl>\n            {carName !== \"\" &&\n            <>\n                <Divider className={classes.carDivider}/>\n                <FormControl variant=\"outlined\" className={classes.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField fullWidth id=\"car-name\" label=\"Name\"\n                                       value={carName}\n                                       InputProps={{\n                                           readOnly: true,\n                                       }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                                <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}\n                                >\n                                    <MenuItem value={2}>2</MenuItem>\n                                    <MenuItem value={3}>3</MenuItem>\n                                    <MenuItem value={4}>4</MenuItem>\n                                    <MenuItem value={5}>5</MenuItem>\n                                    <MenuItem value={6}>6</MenuItem>\n                                    <MenuItem value={7}>7</MenuItem>\n                                    <MenuItem value={8}>8</MenuItem>\n                                    <MenuItem value={9}>9</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                                <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}>\n                                    <MenuItem value={1}>Petrol</MenuItem>\n                                    <MenuItem value={2}>Diesel</MenuItem>\n                                    <MenuItem value={3}>Gas</MenuItem>\n                                    <MenuItem value={4}>Electric</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                type=\"number\"\n                                step={0.05}\n                                label=\"Consumption\"\n                                value={consumption}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                                    readOnly: true,\n                                }}\n                            />\n                        </Grid>\n\n                    </Grid>\n                </FormControl>\n            </>\n            }\n        </div>\n    )\n};\n\nexport default SummaryData;","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport CarForm from \"./signup/CarForm\";\nimport SummaryData from \"./signup/SummaryData\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {home, signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authCheckState, authLogin, authSignup} from \"../../actions/authActions\";\nimport {connect} from \"react-redux\";\nimport {changePicture, createCar} from \"../../actions/profileActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    root: {\n        width: '95%',\n        margin: 10\n    },\n    loading: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    loadingTypography: {\n        marginBottom: theme.spacing(2),\n    }\n\n}));\n\nconst getSteps = () => (\n    [\"Personal Info\", \"Add your Car\", \"Submit!\"]\n);\n\n\nfunction SignupComponent({authSignup, setPicture, postCar}) {\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n    const [image, setImage] = useState(null);\n    const [imageURL, setImageURL] = useState(\"\");\n\n\n    const [carName, setCarName] = useState(\"\");\n    const [totSeats, setTotSeats] = useState(4);\n    const [consumption, setConsumption] = useState(10);\n    const [fuel, setFuel] = useState(1);\n\n    const [open, setOpen] = useState(true);\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PersonalInfoForm firstName={firstName} setFirstName={setFirstName} lastName={lastName}\n                                         setLastName={setLastName} username={username} setUsername={setUsername}\n                                         usernameError={usernameError} setUsernameError={setUsernameError} email={email}\n                                         setEmail={setEmail} emailError={emailError} setEmailError={setEmailError}\n                                         password={password} setPassword={setPassword} passwordError={passwordError}\n                                         setPasswordError={setPasswordError} image={image} setImage={setImage}\n                                         imageURL={imageURL} setImageURL={setImageURL}\n                />;\n            case 1:\n                return <CarForm name={carName} setName={setCarName} totSeats={totSeats} setTotSeats={setTotSeats}\n                                consumption={consumption} setConsumption={setConsumption} fuel={fuel}\n                                setFuel={setFuel}/>\n            case 2:\n                return <SummaryData firstName={firstName} lastName={lastName} username={username} email={email}\n                                    password={password} imageURL={imageURL} carName={carName} totSeats={totSeats}\n                                    consumption={consumption} fuel={fuel}/>\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n\n    const steps = getSteps();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepValid = (step) => {\n        switch (step) {\n            case 0:\n                return !emailError && email.length > 0 && !usernameError && username.length > 0 && !passwordError && password.length > 0;\n            case 1:\n                return carName.length > 0;\n            default:\n                return true;\n        }\n    };\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const uploadData = () => {\n        authSignup(username, firstName, lastName, email, password).then((error) => {\n            console.log(error)\n            if (error !== undefined) {\n                setOpen(false);\n                setActiveStep(0);\n            } else {\n                postCar(carName, totSeats, fuel, consumption)\n                setPicture(image)\n                history.push(home)\n            }\n        })\n    }\n\n    if (activeStep === steps.length) {\n        uploadData()\n    }\n\n    const disabled = !isStepValid(activeStep);\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Sign Up!\n            </Typography>\n            <Divider/>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            <StepContent>\n                                {getStepContent(index)}\n                                <div>\n                                    <Button disabled={activeStep === 0} onClick={handleBack}\n                                            className={classes.button}>\n                                        Back\n                                    </Button>\n                                    {isStepOptional(activeStep) && (\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleSkip}\n                                            className={classes.button}\n                                        >\n                                            Skip\n                                        </Button>\n                                    )}\n\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={disabled}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'SignUP!' : 'Next'}\n                                    </Button>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === steps.length &&\n            <Backdrop className={classes.backdrop} open={open}>\n                <Box className={classes.loading}>\n                    <Typography className={classes.loadingTypography}>\n                        Loading your data!\n                    </Typography>\n                    <CircularProgress color=\"inherit\"/>\n                </Box>\n            </Backdrop>\n\n            }\n\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authSignup: (username, firstName, lastName, email, password) => dispatch(authSignup(username, firstName, lastName, email, password)),\n        setPicture: (image) => dispatch(changePicture(image)),\n        postCar: (carName, totSeats, fuel, consumption) => dispatch(createCar(carName, totSeats, fuel, consumption)),\n    };\n};\n\n\nexport default connect(null, mapDispatchToProps)(SignupComponent)","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\n// import requireAuth from \"./requireAuth\"; // deprecated\n\nimport {createBrowserHistory} from \"history\";\nimport AuthContainer from \"./containers/AuthContainer\";\nimport SignupComponent from \"./components/auth/SignupComponent\";\n\nconst history = createBrowserHistory();\n\n\nconst BaseRouter = props => (\n    <div>\n        <Switch>\n            {/*<Route exact path=\"/\">*/}\n            {/*    <LandingPageContainer/>*/}\n            {/*</Route>*/}\n            {/*<Route exact path=\"/login\">*/}\n            {/*    <AuthContainer>*/}\n            {/*        <LoginComponent/>*/}\n            {/*    </AuthContainer>*/}\n            {/*</Route>*/}\n            <Route exact path=\"/signup\">\n                <AuthContainer>\n                    <SignupComponent/>\n                </AuthContainer>\n            </Route>\n            {/*<Route exact path=\"/home\" component={HomeContainer}/>*/}\n            {/*<Route exact path=\"/profile/:id\" component={ProfileContainer}/>*/}\n            {/*<Route exact path=\"/my-profile\" component={MyProfileContainer}/>*/}\n            {/*<Route exact path=\"/events/:id\" component={EventContainer}/>*/}\n            {/*<Route path=\"*\" component={NotFound404}/>*/}\n        </Switch>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AlertItem(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    let alert = props.alert;\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <Alert\n                    severity={alert.style}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\"/>\n                        </IconButton>\n                    }\n                >\n                    {alert.text}\n                </Alert>\n            </Collapse>\n        </div>\n    );\n}","import React from 'react'\nimport AlertItem from \"../components/alerts/AlertItem\";\n\nexport default function AlertContainer(props) {\n    let alertItems = props.alerts.map((alert) => (\n        <AlertItem key={alert.id} alert={alert}/>\n    ));\n\n    return (\n        <div className=\"alert-container\">\n            {alertItems}\n        </div>\n    )\n\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#52c7b8',\n            main: '#009688',\n            dark: '#00675b',\n            contrastText: '#000',\n        },\n        secondary: {\n            light: '#ffc246',\n            main: '#ff9100',\n            dark: '#c56200',\n            contrastText: '#000',\n        },\n        background: {\n            paper: '#f0f0f0',\n        }\n    },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function NotificationItem({notification, history}) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <ListItem alignItems=\"flex-start\" disabled={notification.read} component=\"a\" href=\"#\"\n                      onClick={history.push(notification.url)}>\n                <ListItemAvatar>\n                    <ArrowForwardIosIcon/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={notification.title}\n                    secondary={notification.content}\n                />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\"/>\n        </>\n    );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as pagesURL from \"../../constants/pagesurls\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {fade} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport theme from \"../../theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport NotificationItem from \"./NotificationItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Box from \"@material-ui/core/Box\";\nimport {login} from \"../../constants/pagesurls\";\nimport {signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authLogout} from \"../../actions/authActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n        display: 'none',\n        outline: 0,\n        marginLeft: 10,\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 5,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    logo: {\n        maxHeight: '60px',\n        outline: 0,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerTitle: {\n        margin: 10,\n    },\n    logout: {\n        marginLeft: 20,\n    }\n}));\n\nfunction NavBar({isAuthenticated, notifications, notificationsNumber, authLogout}) {\n    const classes = useStyles();\n\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setDrawerOpen(open);\n    };\n\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const logoutButton = (\n        <Button color={\"inherit\"} className={classes.logout} onClick={() => {\n            authLogout()\n        }}> Logout</Button>\n    );\n\n    const menuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\">\n                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={toggleDrawer(true)}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n            <MenuItem>\n                {logoutButton}\n            </MenuItem>\n        </Menu>\n    );\n\n    let notificationListItem = notifications.map((notification) => (\n        <NotificationItem key={notification.id} notification={notification}/>\n    ));\n\n    const notificationDrawer = (\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n            <div className={classes.list}\n                 role=\"presentation\"\n                 onClick={toggleDrawer(false)}\n                 onKeyDown={toggleDrawer(false)}>\n                <Divider/>\n                <Typography className={classes.drawerTitle} variant=\"h6\">\n                    Notifications:\n                </Typography>\n                <Divider/>\n                <List>\n                    {notificationListItem}\n                </List>\n            </div>\n        </Drawer>\n    );\n\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <a className={classes.logo} href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n\n                        <img src=\"logo.svg\" alt=\"logo\" className={classes.logo}/>\n                    </a>\n                    <Typography className={classes.title} variant=\"h6\" noWrap component=\"a\" href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n                        DM Project\n                    </Typography>\n                    {isAuthenticated ? (\n                        <>\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon/>\n                                </div>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{'aria-label': 'search'}}\n                                />\n                            </div>\n\n                            <div className={classes.grow}/>\n                            <div className={classes.sectionDesktop}>\n                                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\"\n                                            onClick={toggleDrawer(true)}>\n                                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                                        <NotificationsIcon/>\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={() => {\n                                    }}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle/>\n                                </IconButton>\n                                {logoutButton}\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton\n                                    aria-label=\"show more\"\n                                    aria-controls={mobileMenuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMobileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <MoreIcon/>\n                                </IconButton>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.grow}/>\n                            <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={() => {\n                                history.push(signup)\n                            }}>\n                                Signup\n                            </Button>\n                            <Button color=\"inherit\" disableElevation onClick={() => {\n                                history.push(login)\n                            }}>\n                                Login\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {notificationDrawer}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n        notificationsNumber: state.notifications.notifications.filter((notification) => (notification.read)).length,\n        notifications: state.notifications.notifications\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authLogout: () => dispatch(authLogout()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, {Component, useEffect} from 'react';\nimport './App.css';\nimport BaseRouter from \"./routes\";\nimport {authCheckState} from \"./actions/authActions\";\nimport AlertContainer from \"./containers/AlertContainer\";\nimport {connect} from \"react-redux\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nimport NavBar from \"./components/navbar/NavBar\";\nimport theme from \"./theme\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\nexport const history = createBrowserHistory();\n\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.onTryAutoSignup()\n    });\n\n    return (\n        <Router history={history}>\n            <ThemeProvider theme={theme}>\n                <NavBar/>\n                <AlertContainer alerts={props.alerts}/>\n                <BaseRouter/>\n            </ThemeProvider>\n        </Router>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.profile.user.username,\n        alerts: state.alerts\n    };\n};\n\n// authomatic auth check\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(authCheckState()),\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/types\";\nimport {updateObject} from \"../utils\";\n\nconst initialState = {\n    token: undefined,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: undefined\n    });\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_ERROR:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import * as actionTypes from \"../actions/types\";\nimport uuid from \"node-uuid\";\nimport {ADD_ALERT, REMOVE_ALERT, REMOVE_ALL_ALERTS} from \"../actions/types\";\n\nconst initialState = [];\n\nconst addAlert = (state, action) => {\n    window.scrollTo(0, 0); // scroll top in order to show alert\n    return [\n        ...state,\n        {\n            text: action.text,\n            style: action.style,\n            id: uuid()\n        }\n    ];\n};\n\nconst removeAlert = (state, action) => {\n    return state.filter(alert => {\n        return alert.id !== action.id;\n    });\n};\n\nconst removeAllAlerts = (state, action) => {\n    return initialState;\n};\n\nconst alertsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALERT:\n            return addAlert(state, action);\n        case REMOVE_ALERT:\n            return removeAlert(state, action);\n        case REMOVE_ALL_ALERTS:\n            return removeAllAlerts(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default alertsReducer;","import {updateObject} from \"../utils\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"../actions/types\";\n\nconst initialState = {\n    id: \"\",\n    picture: \"\",\n    score: 0,\n    carSet: [],\n    averageVote: 0,\n    receivedFeedback: [],\n    givenFeedback: [],\n    user: {},\n    loading: false,\n};\n\nconst profileStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst getProfileSuccess = (state, action) => {\n    let {id, picture, score, carSet, averageVote, receivedFeedback, givenFeedback, user} = action;\n    return updateObject(state, {\n        loading: false,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    })\n};\n\nconst profilePictureUpdate = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        picture: action.picture\n    })\n};\n\nconst profileError = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    })\n};\n\nconst userDataUpdate = (state, action) => {\n    let {id, firstName, lastName, email} = action;\n    let user = state.user;\n    user.id = id;\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.email = email;\n    return updateObject(state, {\n        loading: false,\n        user: user\n    })\n};\n\nconst clearProfileData = (state, action) => {\n    return initialState;\n};\n\nconst carCreate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let carSet = state.carSet;\n    carSet.push({id: id, name: name, totSeats: totSeats, fuel: fuel, consumption: consumption});\n    state.loading = false;\n    return state;\n};\n\nconst carUpdate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let index = state.carSet.findIndex((car) => (car.id === id));\n    state.carSet[index].name = name;\n    state.carSet[index].totSeats = totSeats;\n    state.carSet[index].fuel = fuel;\n    state.carSet[index].consumption = fuel;\n    state.loading = false;\n    return state;\n};\n\nconst carDelete = (state, action) => {\n    let carSet = state.carSet.filter((car) => (car.id !== action));\n    return updateObject(state, {\n        carSet: carSet,\n        loading: false,\n    })\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROFILE_OP_START:\n            return profileStart(state, action);\n        case GET_PROFILE_SUCCESS:\n            return getProfileSuccess(state, action);\n        case PROFILE_PICTURE_UPDATE:\n            return profilePictureUpdate(state, action);\n        case PROFILE_OP_ERROR:\n            return profileError(state, action);\n        case USER_DATA_UPDATE:\n            return userDataUpdate(state, action);\n        case CLEAR_PROFILE_DATA:\n            return clearProfileData(state, action);\n        case CAR_CREATE:\n            return carCreate(state, action);\n        case CAR_UPDATE:\n            return carUpdate(state, action);\n        case CAR_DELETE:\n            return carDelete(state, action);\n        default:\n            return state;\n\n\n    }\n};\n\nexport default profileReducer;","import {updateObject} from \"../utils\";\nimport {\n    CLEAR_NOTIFICATIONS,\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    notifications: []\n};\n\nconst notificationsStart = (state, action) => (\n    updateObject(state, {\n        loading: true\n    })\n);\n\nconst notificationsError = (state, action) => (\n    updateObject(state, {\n        loading: false\n    })\n);\n\nconst getNotificationSuccess = (state, action) => (\n    updateObject(state, {\n        notifications: action.notifications\n    })\n);\n\nconst notificationUpdate = (state, action) => {\n    let {id, read} = action;\n    let index = state.notifications.findIndex((notification) => (notification.id === id));\n    state.notifications[index].read = action;\n    return state\n};\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NOTIFICATIONS_START:\n            return notificationsStart(state, action);\n        case NOTIFICATIONS_ERROR:\n            return notificationsError(state, action);\n        case GET_NOTIFICATIONS_SUCCESS:\n            return getNotificationSuccess(state, action);\n        case NOTIFICATION_UPDATE:\n            return notificationUpdate(state, action);\n        case CLEAR_NOTIFICATIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default notificationReducer;","import {combineReducers} from \"redux\";\nimport authReducer from \"./authReducer\";\nimport alertsReducer from \"./alertReducer\";\nimport profileReducer from \"./profileReducer\";\nimport notificationReducer from \"./notificationReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    alerts: alertsReducer,\n    profile: profileReducer,\n    notifications: notificationReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n        applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}