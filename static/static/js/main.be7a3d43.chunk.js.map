{"version":3,"sources":["constants/constants.js","constants/apiurls.js","actions/alertActions.js","actions/types.js","utils.jsx","actions/profileActions.js","actions/notificationsActions.js","actions/authActions.js","containers/AuthContainer.jsx","constants/pagesurls.js","components/auth/signup/PersonalInfoForm.jsx","components/auth/SignupComponent.jsx","routes.jsx","components/alerts/AlertItem.jsx","containers/AlertContainer.jsx","theme.jsx","components/navbar/NotificationItem.jsx","components/navbar/NavBar.jsx","App.js","serviceWorker.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/profileReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js"],"names":["APP_CLIENTID","APP_SECRET","apiBaseUrl","serverURL","currentProfileURL","tokenURL","notificationListURL","addAlert","text","style","type","alertError","error","dispatch","response","data","request","message","updateObject","oldObject","updatedProperties","headers","content_type","access_token","otherHeaders","otherOptions","fetchProfile","localStorage","getItem","axios","get","then","res","id","picture","user","score","carSet","averageVote","receivedFeedback","givenFeedback","setItem","getSuccess","catch","retrieveNotifications","notifications","success","token","checkAuthTimeout","expirationTime","refresh_token","setTimeout","refreshAuth","post","qs","client_id","client_secret","grant_type","expirationDate","Date","getTime","googleOAuthLogin","google_token","backend","authLogin","username","password","authCheckState","undefined","authLogout","clear","useStyles","makeStyles","theme","root","width","backgroundColor","white","formPaper","display","flexWrap","margin","palette","background","paper","inline","connect","state","isAuthenticated","auth","login","googleLogin","children","history","useEffect","push","classes","Container","className","maxWidth","Paper","button","marginRight","spacing","PersonalInfoForm","firstName","setFirstName","lastName","setLastName","setUsername","usernameError","setUsernameError","setPassword","passwordError","setPasswordError","email","setEmail","emailError","setEmailError","useState","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","usernameHelperText","setUsernameHelperText","validateEmail","input","target","value","test","validateUsername","validatePassword","TextField","variant","label","placeholder","onChange","autoComplete","required","helperText","onBlur","title","padding","instructions","marginTop","marginBottom","SignupComponent","props","steps","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","step","isStepSkipped","has","disabled","length","isStepValid","Typography","align","Divider","Stepper","map","index","stepProps","labelProps","optional","completed","Step","key","StepLabel","getStepContent","Button","onClick","prevActiveStep","color","Error","prevSkipped","newSkipped","values","add","delete","createBrowserHistory","BaseRouter","exact","path","AlertItem","open","setOpen","alert","Collapse","in","Alert","severity","action","IconButton","aria-label","size","fontSize","AlertContainer","alertItems","alerts","createMuiTheme","primary","light","main","dark","contrastText","secondary","responsiveFontSizes","NotificationItem","notification","ListItem","alignItems","read","component","href","url","ListItemAvatar","ListItemText","content","grow","flexGrow","menuButton","textDecoration","outline","marginLeft","breakpoints","up","search","position","borderRadius","shape","fade","common","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","logo","maxHeight","list","fullList","drawerTitle","logout","notificationsNumber","mobileMoreAnchorEl","setMobileMoreAnchorEl","drawerOpen","setDrawerOpen","toggleDrawer","event","isMobileMenuOpen","Boolean","logoutButton","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Badge","badgeContent","aria-controls","aria-haspopup","notificationListItem","notificationDrawer","Drawer","anchor","role","onKeyDown","List","AppBar","Toolbar","src","alt","noWrap","InputBase","inputProps","edge","currentTarget","disableElevation","profile","onTryAutoSignup","ThemeProvider","window","location","hostname","match","initialState","loading","authStart","authSuccess","authFail","authReducer","scrollTo","uuid","removeAlert","filter","removeAllAlerts","alertsReducer","profileStart","getProfileSuccess","profilePictureUpdate","profileError","userDataUpdate","clearProfileData","carCreate","name","totSeats","fuel","consumption","carUpdate","findIndex","car","carDelete","profileReducer","notificationsStart","notificationsError","getNotificationSuccess","notificationUpdate","notificationReducer","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.be7a3d43.chunk.js","sourcesContent":["import {home} from \"./pagesurls\";\n\nexport const CLIENT_ID = \"283420556311-30r26g3mtt5odkqmit6u7onam3qrul16.apps.googleusercontent.com\";\nexport const CLIENT_SECRET = \"KsSTbOaPDbxEbEGqkcyWl3-v\";\nexport const APP_CLIENTID = \"4mOLHPfJL0zueHOlawvJXsdnImpjOv3PmLdmm3NT\";\nexport const APP_SECRET = \"FW4dYuZsLmE6PQHk7qrPAc4shQhdx2hknqNOh58XO3JQ6PFI8um2z6wyJubxF6hKNOOOJfZUQ67jm5ApN5HJioq4XsNAGSbCLiQZqrqfo6jiy67ddpvMOl3Be8SATFSL\";\n\nexport const serverURL = \"http://localhost:8000/\";\n\nexport const status = [\n    'Joinable',\n    'Computing',\n    'Computed'\n];\n\n","import {serverURL} from \"./constants\";\n\nlet apiBaseUrl = serverURL + \"api/v0.1/\";\n\nexport const eventListURL = (joinable = true, joined = true, owned = false) => (apiBaseUrl + `events/?joined=${joined}&joinable=${joinable}&owned=${owned}`);\n\nexport const eventCreateURL = () => (apiBaseUrl + 'events/');\n\nexport const eventDetailURL = (eventPk) => (`${eventCreateURL()}${eventPk}/`);\n\nexport const eventJoinURL = (eventPk) => (`${eventDetailURL(eventPk)}participants/`);\n\nexport const participationEditURL = (eventPk, participantPk) => (`${eventJoinURL(eventPk)}${participantPk}/`);\n\nexport const currentProfileURL = () => (apiBaseUrl + 'current-profile/');\n\nexport const convertTokenURL = () => (apiBaseUrl + 'auth/convert-token');\n\nexport const tokenURL = () => (apiBaseUrl + 'auth/token');\n\nexport const signupURL = () => (apiBaseUrl + 'signup/');\n\nexport const profilesURL = (profilePk) => (apiBaseUrl + `profiles/${profilePk}/`);\n\nexport const carsListURL = (profilePk) => (`${profilesURL(profilePk)}cars/`);\n\nexport const carsDetailURL = (profilePk, carPk) => (`${carsListURL}${carPk}/`);\n\nexport const createFeedbackURL = (eventPk, receiverParticipantPk) => (`${participationEditURL(eventPk, receiverParticipantPk)}feedback/`);\n\nexport const editFeedbackURL = (eventPk, receiverParticipantPk, feedbackPk) => (`${createFeedbackURL(eventPk, receiverParticipantPk)}${feedbackPk}/`);\n\nexport const notificationListURL = () => (`${currentProfileURL()}notifications/`);\nexport const notificationEditURL = (notificationPk) => (`${notificationListURL()}${notificationPk}/`)","import * as actionTypes from \"./types\";\n\n\nexport const addAlert = (text, style) => {\n    return {\n        type: actionTypes.ADD_ALERT,\n        text: text,\n        style: style\n    };\n};\n\nexport const removeAllAlerts = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALL_ALERTS\n    });\n};\n\nexport const removeAlert = (id) => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALERT,\n        id: id\n    });\n};\n\n\nexport const alertError = (error) => (dispatch) => {\n    if (error.response) {\n        dispatch(addAlert(error.response.data, \"danger\"));\n    } else if (error.request) {\n        dispatch(addAlert(error.request, \"danger\"))\n    } else {\n        dispatch(addAlert(error.message, \"danger\"));\n    }\n};\n\n","/*\n    Alerts\n */\nexport const ADD_ALERT = \"ADD_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REMOVE_ALL_ALERTS = \"REMOVE_ALL_ALERTS\";\n\n/*\n    Auth\n*/\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n/*\n    Profile\n */\nexport const PROFILE_OP_START = \"PROFILE_OP_START\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const PROFILE_PICTURE_UPDATE = \"PROFILE_PICTURE_UPDATE\";\nexport const PROFILE_OP_ERROR = \"PROFILE_OP_ERROR\";\nexport const USER_DATA_UPDATE = \"USER_DATA_UPDATE\";\nexport const CLEAR_PROFILE_DATA = \"CLEAR_PROFILE_DATA\";\n\n/*\n    Profile - Car\n */\nexport const CAR_CREATE = \"CAR_CREATE\";\nexport const CAR_UPDATE = \"CAR_UPDATE\";\nexport const CAR_DELETE = \"CAR_DELETE\";\n\n/*\n    Notifications\n */\nexport const NOTIFICATIONS_START = \"NOTIFICATIONS_START\";\nexport const NOTIFICATIONS_ERROR = \"NOTIFICATIONS_ERROR\";\nexport const GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\nexport const NOTIFICATION_UPDATE = \"NOTIFICATION_UPDATE\";\nexport const CLEAR_NOTIFICATIONS = \"CLEAR_NOTIFICATIONS\";","export const isAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n        return false;\n    } else {\n        const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n        return expirationDate > new Date();\n    }\n};\n\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\n/**\n *\n * @param {string}content_type\n * @param {string}access_token\n * @param {{}}otherHeaders\n * @param otherOptions\n */\nexport const headers = (content_type, access_token = null, otherHeaders = {}, otherOptions = {}) => {\n    let headers = {\n        headers: {\n            \"Content-type\": content_type,\n            ...otherHeaders\n        },\n        ...otherOptions\n    };\n    if (access_token != null) headers = {\n        ...headers, headers: {...headers.headers, \"Authorization\": `Bearer ${access_token}`}\n    };\n\n    return headers\n};","import axios from \"axios\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"../actions/types\";\nimport {carsListURL, currentProfileURL, signupURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {addAlert, alertError} from \"./alertActions\";\nimport {authLogout} from \"./authActions\";\n\n\nconst start = () => (\n    {\n        type: PROFILE_OP_START\n    }\n);\n\nconst getSuccess = (id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback) => (\n    {\n        type: GET_PROFILE_SUCCESS,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback\n    }\n);\n\nconst successPictureUpdate = (picture) => (\n    {\n        type: PROFILE_PICTURE_UPDATE,\n        picture,\n    }\n);\n\nconst fail = () => (\n    {\n        type: PROFILE_OP_ERROR,\n    }\n);\n\nconst changeUserDataSuccess = (id, firstName, lastName, email) => (\n    {\n        type: USER_DATA_UPDATE,\n        id,\n        firstName,\n        lastName,\n        email\n    }\n);\n\nconst createCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_CREATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst changeCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_UPDATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst deleteCarSuccess = (id) => (\n    {\n        type: CAR_DELETE,\n        id,\n    }\n);\n\nexport const clearProfileData = () => (dispatch) => (\n    {\n        type: CLEAR_PROFILE_DATA\n    }\n);\n\n\nexport const fetchProfile = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            currentProfileURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback} = res.data;\n            localStorage.setItem(\"profile_id\", id);\n            dispatch(getSuccess(id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback));\n        })\n        .catch(error => {\n            dispatch(fail());\n            alertError(error);\n            return error;\n        })\n};\n\n\nexport const changePicture = (picture) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"picture\", picture, picture.name);\n    return axios\n        .put(\n            currentProfileURL(),\n            formData,\n            headers('multipart/form-data', access_token)\n        )\n        .then(res => {\n            dispatch(successPictureUpdate(res.data.picture));\n            dispatch(addAlert(\"Immagine modificata con successo!\", \"success\"));\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const changeUserData = (first_name, last_name, email, password = null) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let data = {\n        first_name: first_name,\n        last_name: last_name,\n        email: email,\n        password: password\n    };\n    if (password != null) {\n        data.password = password;\n    }\n    return axios\n        .put(\n            signupURL(),\n            data,\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, firstName, lastName, email} = res.data;\n            dispatch(changeUserDataSuccess(id, firstName, lastName, email));\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        });\n};\n\n\nexport const deleteUser = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n\n    return axios\n        .delete(\n            signupURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            addAlert(\"You have been deleted from the system!\", \"success\");\n            dispatch(authLogout());\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const createCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .post(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(createCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const updateCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .put(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(changeCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const deleteCar = (id) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n    return axios\n        .delete(\n            carsListURL(profileId),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(deleteCarSuccess(id));\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n","import {notificationEditURL, notificationListURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {alertError} from \"./alertActions\";\nimport {AxiosInstance as axios} from \"axios\";\nimport {\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START,\n    CLEAR_NOTIFICATIONS\n} from \"../actions/types\";\n\nconst start = () => (\n    {\n        type: NOTIFICATIONS_START\n    }\n);\n\nconst fail = () => (\n    {\n        type: NOTIFICATIONS_ERROR\n    }\n);\n\nconst getSuccess = (notifications) => (\n    {\n        type: GET_NOTIFICATIONS_SUCCESS,\n        notifications\n    }\n);\n\n/**\n *\n * @param id\n * @param {boolean} read\n */\nconst readSuccess = (id, read) => (\n    {\n        type: NOTIFICATION_UPDATE,\n        id,\n        read\n    }\n);\n\n\nexport const clearNotifications = () => (dispatch) => {\n    dispatch({type: CLEAR_NOTIFICATIONS})\n};\n\nexport const retrieveNotifications = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            notificationListURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(getSuccess(res.data))\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const readNotification = (notificationId, read = true) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .put(\n            notificationEditURL(notificationId),\n            {\n                read: read\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(readSuccess(notificationId, read))\n        })\n        .catch(error => {\n            alertError(error);\n            dispatch(fail());\n            return error;\n        })\n};\n\n","import axios from \"axios\";\nimport {convertTokenURL, tokenURL, signupURL} from \"../constants/apiurls\";\nimport {alertError} from './alertActions';\nimport {AUTH_ERROR, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"./types\";\nimport loginURL from \"../constants/apiurls\";\nimport {APP_CLIENTID, APP_SECRET} from \"../constants/constants\";\nimport * as qs from \"qs\";\nimport {headers} from \"../utils\";\nimport {clearProfileData, fetchProfile} from \"./profileActions\";\nimport {clearNotifications, retrieveNotifications} from \"./notificationsActions\";\n\nconst start = () => ({\n    type: AUTH_START,\n});\n\nconst success = (token) => ({\n    type: AUTH_SUCCESS,\n    token: token\n});\n\nconst fail = () => ({\n    type: AUTH_ERROR\n});\n\nconst logout = () => {\n    localStorage.clear();\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime, refresh_token) => {\n    setTimeout((refresh_token) => {\n        refreshAuth(refresh_token);\n    }, expirationTime * 1000);\n};\n\nexport const refreshAuth = (refresh_token) => (dispatch) => {\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'refresh_token',\n                refresh_token: refresh_token,\n            }),\n            headers('application/x-www-form-urlencoded')\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n            dispatch(success(access_token));\n            fetchProfile();\n            retrieveNotifications();\n            checkAuthTimeout(3600);\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            alertError(error);\n            return error;\n        });\n};\n\nexport const googleOAuthLogin = (google_token) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            convertTokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'convert_token',\n                backend: 'google-oauth2',\n                token: google_token\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n            dispatch(success(access_token));\n            fetchProfile();\n            retrieveNotifications();\n            checkAuthTimeout(3600);\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            alertError(error);\n            return error;\n        });\n};\n\nexport const authLogin = (username, password) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'password',\n                username: username,\n                password: password,\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expirationDate\", expirationDate);\n            dispatch(success(access_token));\n            fetchProfile();\n            retrieveNotifications();\n            checkAuthTimeout(3600);\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            alertError(error);\n            return error;\n        });\n};\n\n\nexport const authSignup = (username, first_name, last_name, email, password) => (dispatch) => {\n    dispatch(start());\n    // we return the promise in order to use wait till the end using \"then\"\n    return axios\n        .post(\n            signupURL(),\n            {\n                username: username,\n                first_name: first_name,\n                last_name: last_name,\n                email: email,\n                password: password\n            },\n            headers('application/json')\n        )\n        .then(res => {\n            authLogin(username, password)\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"token\");\n        if (token === undefined) {\n            authLogout();\n        } else {\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n            if (expirationDate <= new Date()) {\n                authLogout();\n            } else {\n                dispatch(success(token));\n                fetchProfile();\n                retrieveNotifications();\n                checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000);\n            }\n        }\n    };\n};\n\nexport const authLogout = () => dispatch => {\n    dispatch(logout());\n    clearProfileData();\n    clearNotifications();\n};\n\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {home, login} from \"../constants/pagesurls\";\nimport {connect} from \"react-redux\";\nimport {authCheckState, authLogin, googleOAuthLogin} from \"../actions/authActions\";\nimport {Container, Paper} from \"@material-ui/core\";\nimport {white} from \"color-name\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: white,\n    },\n    formPaper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 20,\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nconst AuthContainer = ({children, history, isAuthenticated}) => {\n    useEffect(() => {\n        if (isAuthenticated) history.push(home)\n    });\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth=\"sm\">\n            <Paper className={classes.formPaper}>\n                {children}\n            </Paper>\n        </Container>\n    )\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: authLogin,\n        googleLogin: googleOAuthLogin,\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer)","export const landingPage = \"/\";\nexport const home = \"/home\";\nexport const login = \"/login\";\nexport const signup = \"/signup\";\nexport const myProfile = \"/my-profile\";\nexport const profile_id = \"/profiles/:id\";\nexport const profile = \"/profiles/\";\nexport const event_id = \"/events/:id\";\nexport const event = \"/events/\";\n","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: 10,\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n    },\n\n}));\n\n\nconst PersonalInfoForm = ({firstName, setFirstName, lastName, setLastName, username, setUsername, usernameError, setUsernameError, password, setPassword, passwordError, setPasswordError, email, setEmail, emailError, setEmailError}) => {\n    const classes = useStyles();\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\n    const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n    const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n    const validateEmail = (input) => {\n        if (input.target.value === null || input.target.value === \"\") {\n            setEmailError(true);\n            setEmailHelperText(\"Email is required\");\n        } else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(input.target.value))) {\n            setEmailError(true);\n            setEmailHelperText(\"Not a valid email\");\n        } else {\n            setEmailError(false);\n            setEmailHelperText(\"\");\n        }\n        setEmail(input.target.value)\n    };\n\n    const validateUsername = (input) => {\n        if (input.target.value === null || \"\" === input.target.value) {\n            setUsernameError(true);\n            setUsernameHelperText(\"Username is required\");\n        } else {\n            setUsernameError(false);\n            setUsernameHelperText(\"\");\n        }\n        setUsername(input.target.value)\n    };\n\n    const validatePassword = (input) => {\n        if (input.target.value === null || input.target.value === \"\") {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password is required\");\n        } else if (!(/^[\\w!@#$%^&*]{8,}$/.test(input.target.value))) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should be at least 8 character long\");\n        } else if (!/^(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 number\");\n        } else if (!/^(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 capital\");\n        } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 lowercase\");\n        } else if (!/^(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Password should contain at least 1 special character\");\n        } else {\n            setPasswordError(false);\n            setPasswordHelperText(\"\");\n        }\n        setPassword(input.target.value)\n    };\n\n\n    return (\n        <form className={classes.root}>\n            <TextField variant=\"outlined\" id=\"name\" label=\"First Name\" placeholder=\"James\" value={firstName}\n                       onChange={(input) => {\n                           setFirstName(input.target.value)\n                       }}\n                       autoComplete=\"name\"/>\n            <TextField variant=\"outlined\" id=\"surname\" label=\"Last Name\" placeholder=\"Bond\" value={lastName}\n                       onChange={(input) => {\n                           setLastName(input.target.value)\n                       }}\n                       autoComplete=\"family-name\"/>\n            <TextField variant=\"outlined\"\n                       required id=\"username\"\n                       label=\"Username\"\n                       value={username}\n                       placeholder=\"jamesbond007\"\n                       helperText={usernameHelperText}\n                       onChange={validateUsername}\n                       onBlur={validateUsername}\n                       error={usernameError}\n                       autoComplete=\"username\"\n            />\n            <TextField variant=\"outlined\"\n                       required id=\"email\"\n                       label=\"E-mail\"\n                       placeholder=\"jamesbond@mi6.co.uk\"\n                       type=\"email\"\n                       error={emailError}\n                       helperText={emailHelperText}\n                       onChange={validateEmail}\n                       onBlur={validateEmail}\n                       value={email}\n                       autoComplete=\"email\"\n            />\n            <TextField variant=\"outlined\"\n                       required id=\"password\"\n                       label=\"Password\"\n                       error={passwordError}\n                       value={password}\n                       type=\"password\"\n                       helperText={passwordHelperText}\n                       onChange={validatePassword}\n                       onBlur={validatePassword}\n                       autoComplete=\"new-password\"\n            />\n\n        </form>\n    )\n};\n\nexport default PersonalInfoForm;","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: 10,\n    },\n    title: {\n        margin: 5,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n}));\n\nconst getSteps = () => (\n    [\"Personal Info\", \"Add your Car\", \"Submit!\"]\n);\n\n\nexport default function SignupComponent(props) {\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PersonalInfoForm firstName={firstName} setFirstName={setFirstName} lastName={lastName}\n                                         setLastName={setLastName} username={username} setUsername={setUsername}\n                                         usernameError={usernameError} setUsernameError={setUsernameError} email={email}\n                                         setEmail={setEmail} emailError={emailError} setEmailError={setEmailError}\n                                         password={password} setPassword={setPassword} passwordError={passwordError}\n                                         setPasswordError={setPasswordError}\n                />;\n            case 1:\n                return \"Car Form here, skippable\";\n            case 2:\n                return \"All submitted data\";\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n\n    const steps = getSteps();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepValid = (step) => {\n        switch (step) {\n            case 0:\n                return !emailError && email.length > 0 && !usernameError && username.length > 0 && !passwordError && password.length > 0;\n            case 1:\n                return true;\n            case 2:\n                return true;\n        }\n    };\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const disabled = !isStepValid(activeStep);\n    return (<div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Sign Up!\n            </Typography>\n            <Divider/>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>\n                            All steps completed - you're finished\n                        </Typography>\n                    </div>\n                ) : (\n                    <div>\n                        <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                        <div>\n                            <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                Back\n                            </Button>\n                            {isStepOptional(activeStep) && (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleSkip}\n                                    className={classes.button}\n                                >\n                                    Skip\n                                </Button>\n                            )}\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                                className={classes.button}\n                                disabled={disabled}\n                            >\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\n// import requireAuth from \"./requireAuth\"; // deprecated\n\nimport {createBrowserHistory} from \"history\";\nimport AuthContainer from \"./containers/AuthContainer\";\nimport SignupComponent from \"./components/auth/SignupComponent\";\n\nconst history = createBrowserHistory();\n\n\nconst BaseRouter = props => (\n    <div>\n        <Switch>\n            {/*<Route exact path=\"/\">*/}\n            {/*    <LandingPageContainer/>*/}\n            {/*</Route>*/}\n            {/*<Route exact path=\"/login\">*/}\n            {/*    <AuthContainer>*/}\n            {/*        <LoginComponent/>*/}\n            {/*    </AuthContainer>*/}\n            {/*</Route>*/}\n            <Route exact path=\"/signup\">\n                <AuthContainer>\n                    <SignupComponent/>\n                </AuthContainer>\n            </Route>\n            {/*<Route exact path=\"/home\" component={HomeContainer}/>*/}\n            {/*<Route exact path=\"/profile/:id\" component={ProfileContainer}/>*/}\n            {/*<Route exact path=\"/my-profile\" component={MyProfileContainer}/>*/}\n            {/*<Route exact path=\"/events/:id\" component={EventContainer}/>*/}\n            {/*<Route path=\"*\" component={NotFound404}/>*/}\n        </Switch>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AlertItem(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    let alert = props.alert;\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <Alert\n                    severity={alert.style}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\"/>\n                        </IconButton>\n                    }\n                >\n                    {alert.text}\n                </Alert>\n            </Collapse>\n        </div>\n    );\n}","import React from 'react'\nimport AlertItem from \"../components/alerts/AlertItem\";\n\nexport default function AlertContainer(props) {\n    let alertItems = props.alerts.map((alert) => (\n        <AlertItem key={alert.id} alert={alert}/>\n    ));\n\n    return (\n        <div className=\"alert-container\">\n            {alertItems}\n        </div>\n    )\n\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#52c7b8',\n            main: '#009688',\n            dark: '#00675b',\n            contrastText: '#000',\n        },\n        secondary: {\n            light: '#ffc246',\n            main: '#ff9100',\n            dark: '#c56200',\n            contrastText: '#000',\n        },\n        background: {\n            paper: '#f0f0f0',\n        }\n    },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function NotificationItem({notification, history}) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <ListItem alignItems=\"flex-start\" disabled={notification.read} component=\"a\" href=\"#\"\n                      onClick={history.push(notification.url)}>\n                <ListItemAvatar>\n                    <ArrowForwardIosIcon/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={notification.title}\n                    secondary={notification.content}\n                />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\"/>\n        </>\n    );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as pagesURL from \"../../constants/pagesurls\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {fade} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport theme from \"../../theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport NotificationItem from \"./NotificationItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Box from \"@material-ui/core/Box\";\nimport {login} from \"../../constants/pagesurls\";\nimport {signup} from \"../../constants/pagesurls\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n        display: 'none',\n        outline: 0,\n        marginLeft: 10,\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 5,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    logo: {\n        maxHeight: '60px',\n        outline: 0,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerTitle: {\n        margin: 10,\n    },\n    logout: {\n        marginLeft: 20,\n    }\n}));\n\nfunction NavBar({history, isAuthenticated, notifications, notificationsNumber}) {\n\n    const classes = useStyles();\n\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setDrawerOpen(open);\n    };\n\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const logoutButton = (\n        <Button color={\"inherit\"} className={classes.logout}> Logout</Button>\n    );\n\n    const menuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\">\n                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={toggleDrawer(true)}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n            <MenuItem>\n                {logoutButton}\n            </MenuItem>\n        </Menu>\n    );\n\n    let notificationListItem = notifications.map((notification) => (\n        <NotificationItem key={notification.id} notification={notification}/>\n    ));\n\n    const notificationDrawer = (\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n            <div className={classes.list}\n                 role=\"presentation\"\n                 onClick={toggleDrawer(false)}\n                 onKeyDown={toggleDrawer(false)}>\n                <Divider/>\n                <Typography className={classes.drawerTitle} variant=\"h6\">\n                    Notifications:\n                </Typography>\n                <Divider/>\n                <List>\n                    {notificationListItem}\n                </List>\n            </div>\n        </Drawer>\n    );\n\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <a className={classes.logo} href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n\n                        <img src=\"logo.svg\" alt=\"logo\" className={classes.logo}/>\n                    </a>\n                    <Typography className={classes.title} variant=\"h6\" noWrap component=\"a\" href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n                        DM Project\n                    </Typography>\n                    {isAuthenticated ? (\n                        <>\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon/>\n                                </div>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{'aria-label': 'search'}}\n                                />\n                            </div>\n\n                            <div className={classes.grow}/>\n                            <div className={classes.sectionDesktop}>\n                                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\"\n                                            onClick={toggleDrawer(true)}>\n                                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                                        <NotificationsIcon/>\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={() => {\n                                    }}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle/>\n                                </IconButton>\n                                {logoutButton}\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton\n                                    aria-label=\"show more\"\n                                    aria-controls={mobileMenuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMobileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <MoreIcon/>\n                                </IconButton>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.grow}/>\n                            <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={() => {\n                                history.push(signup)\n                            }}>\n                                Signup\n                            </Button>\n                            <Button color=\"inherit\" disableElevation onClick={() => {\n                                history.push(login)\n                            }}>\n                                Login\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {notificationDrawer}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n        notificationsNumber: state.notifications.notifications.length,\n        notifications: state.notifications.notifications\n    };\n};\n\nexport default connect(mapStateToProps)(NavBar);","import React, {Component, useEffect} from 'react';\nimport './App.css';\nimport BaseRouter from \"./routes\";\nimport {authCheckState} from \"./actions/authActions\";\nimport AlertContainer from \"./containers/AlertContainer\";\nimport {connect} from \"react-redux\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nimport NavBar from \"./components/navbar/NavBar\";\nimport theme from \"./theme\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\nconst history = createBrowserHistory();\n\n\nfunction App(props) {\n\n    useEffect(props.onTryAutoSignup());\n\n    return (\n        <Router history={history}>\n            <ThemeProvider theme={theme}>\n                <NavBar history={history}/>\n                <AlertContainer alerts={props.alerts}/>\n                <BaseRouter/>\n            </ThemeProvider>\n        </Router>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.profile.user.username,\n        alerts: state.alerts\n    };\n};\n\n// authomatic auth check\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: authCheckState,\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/types\";\nimport {updateObject} from \"../utils\";\n\nconst initialState = {\n    token: undefined,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: undefined\n    });\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_ERROR:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import * as actionTypes from \"../actions/types\";\nimport uuid from \"node-uuid\";\nimport {ADD_ALERT, REMOVE_ALERT, REMOVE_ALL_ALERTS} from \"../actions/types\";\n\nconst initialState = [];\n\nconst addAlert = (state, action) => {\n    window.scrollTo(0, 0); // scroll top in order to show alert\n    return [\n        ...state,\n        {\n            text: action.text,\n            style: action.style,\n            id: uuid()\n        }\n    ];\n};\n\nconst removeAlert = (state, action) => {\n    return state.filter(alert => {\n        return alert.id !== action.id;\n    });\n};\n\nconst removeAllAlerts = (state, action) => {\n    return initialState;\n};\n\nconst alertsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALERT:\n            return addAlert(state, action);\n        case REMOVE_ALERT:\n            return removeAlert(state, action);\n        case REMOVE_ALL_ALERTS:\n            return removeAllAlerts(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default alertsReducer;","import {updateObject} from \"../utils\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"../actions/types\";\n\nconst initialState = {\n    id: \"\",\n    picture: \"\",\n    score: 0,\n    carSet: [],\n    averageVote: 0,\n    receivedFeedback: [],\n    givenFeedback: [],\n    user: {},\n    loading: false,\n};\n\nconst profileStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst getProfileSuccess = (state, action) => {\n    let {id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback} = action;\n    return updateObject(state, {\n        loading: false,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    })\n};\n\nconst profilePictureUpdate = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        action\n    })\n};\n\nconst profileError = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    })\n};\n\nconst userDataUpdate = (state, action) => {\n    let {id, firstName, lastName, email} = action;\n    let user = state.user;\n    user.id = id;\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.email = email;\n    return updateObject(state, {\n        loading: false,\n        user: user\n    })\n};\n\nconst clearProfileData = (state, action) => {\n    return initialState;\n};\n\nconst carCreate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let carSet = state.carSet;\n    carSet.push({id: id, name: name, totSeats: totSeats, fuel: fuel, consumption: consumption});\n    state.loading = false;\n    return state;\n};\n\nconst carUpdate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let index = state.carSet.findIndex((car) => (car.id === id));\n    state.carSet[index].name = name;\n    state.carSet[index].totSeats = totSeats;\n    state.carSet[index].fuel = fuel;\n    state.carSet[index].consumption = fuel;\n    state.loading = false;\n    return state;\n};\n\nconst carDelete = (state, action) => {\n    let carSet = state.carSet.filter((car) => (car.id !== action));\n    return updateObject(state, {\n        carSet: carSet,\n        loading: false,\n    })\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROFILE_OP_START:\n            return profileStart(state, action);\n        case GET_PROFILE_SUCCESS:\n            return getProfileSuccess(state, action);\n        case PROFILE_PICTURE_UPDATE:\n            return profilePictureUpdate(state, action);\n        case PROFILE_OP_ERROR:\n            return profileError(state, action);\n        case USER_DATA_UPDATE:\n            return userDataUpdate(state, action);\n        case CLEAR_PROFILE_DATA:\n            return clearProfileData(state, action);\n        case CAR_CREATE:\n            return carCreate(state, action);\n        case CAR_UPDATE:\n            return carUpdate(state, action);\n        case CAR_DELETE:\n            return carDelete(state, action);\n        default:\n            return state;\n\n\n    }\n};\n\nexport default profileReducer;","import {updateObject} from \"../utils\";\nimport {\n    CLEAR_NOTIFICATIONS,\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    notifications: []\n};\n\nconst notificationsStart = (state, action) => (\n    updateObject(state, {\n        loading: true\n    })\n);\n\nconst notificationsError = (state, action) => (\n    updateObject(state, {\n        loading: false\n    })\n);\n\nconst getNotificationSuccess = (state, action) => (\n    updateObject(state, {\n        notifications: action\n    })\n);\n\nconst notificationUpdate = (state, action) => {\n    let {id, read} = action;\n    let index = state.notifications.findIndex((notification) => (notification.id === id));\n    state.notifications[index].read = action;\n    return state\n};\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NOTIFICATIONS_START:\n            return notificationsStart(state, action);\n        case NOTIFICATIONS_ERROR:\n            return notificationsError(state, action);\n        case GET_NOTIFICATIONS_SUCCESS:\n            return getNotificationSuccess(state, action);\n        case NOTIFICATION_UPDATE:\n            return notificationUpdate(state, action);\n        case CLEAR_NOTIFICATIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default notificationReducer;","import {combineReducers} from \"redux\";\nimport authReducer from \"./authReducer\";\nimport alertsReducer from \"./alertReducer\";\nimport profileReducer from \"./profileReducer\";\nimport notificationReducer from \"./notificationReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    alerts: alertsReducer,\n    profile: profileReducer,\n    notifications: notificationReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n        applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}