{"version":3,"sources":["constants/pagesurls.js","constants/constants.js","constants/apiurls.js","actions/alertActions.js","actions/types.js","utils.jsx","actions/profileActions.js","actions/notificationsActions.js","actions/authActions.js","containers/AuthContainer.jsx","icons/GoogleLogo.svg","components/auth/signup/PersonalInfoForm.jsx","components/auth/signup/CarForm.jsx","components/auth/signup/SummaryData.jsx","components/auth/SignupComponent.jsx","components/auth/LoginComponent.jsx","routes.jsx","components/alerts/AlertItem.jsx","containers/AlertContainer.jsx","theme.jsx","components/navbar/NotificationItem.jsx","components/navbar/NavBar.jsx","App.js","serviceWorker.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/profileReducer.js","reducers/notificationReducer.js","reducers/index.js","store.js","index.js"],"names":["home","CLIENT_ID","APP_CLIENTID","APP_SECRET","apiBaseUrl","serverURL","currentProfileURL","tokenURL","signupURL","carsListURL","profilePk","profilesURL","notificationListURL","addAlert","text","style","type","alertError","error","dispatch","console","log","response","JSON","stringify","data","toString","updateObject","oldObject","updatedProperties","headers","content_type","access_token","otherHeaders","otherOptions","fetchProfile","localStorage","getItem","axios","get","then","res","id","user","picture","score","car_set","average_vote","received_feedback","given_feedback","setItem","carSet","averageVote","receivedFeedback","givenFeedback","getSuccess","catch","retrieveNotifications","notifications","success","token","checkAuthTimeout","expirationTime","refresh_token","setTimeout","refreshAuth","post","qs","client_id","client_secret","grant_type","expirationDate","Date","getTime","googleOAuthLogin","google_token","backend","authLogin","username","password","authLogout","clear","useStyles","makeStyles","theme","root","minWidth","backgroundColor","white","alignItems","flexDirection","display","formPaper","flexWrap","margin","maxWidth","palette","background","paper","inline","connect","state","isAuthenticated","undefined","auth","children","useEffect","history","push","classes","Container","className","Paper","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","d","_ref","svgRef","title","props","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","marginBottom","spacing","width","form","button","marginRight","imageInput","imageProgress","marginLeft","imgPreview","color","getContrastText","secondary","dark","maxHeight","minHeight","googleLogin","editAlert","PersonalInfoForm","firstName","setFirstName","lastName","setLastName","setUsername","usernameError","setUsernameError","setPassword","passwordError","setPasswordError","email","setEmail","emailError","setEmailError","image","setImage","imageURL","setImageURL","isGoogleLogin","setGoogleLogin","setGoogleAccessToken","handleNext","useState","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","usernameHelperText","setUsernameHelperText","validateEmail","input","undoGoogleLogin","value","test","validateUsername","validatePassword","charName","toUpperCase","charAt","Avatar","src","Grid","container","item","xs","isSignedIn","onSuccess","profileObj","split","replace","accessToken","givenName","familyName","imageUrl","responseType","blob","pop","name","onFailure","clientId","render","renderProps","Button","variant","onClick","startIcon","SvgIcon","component","GoogleIcon","Alert","severity","sm","TextField","fullWidth","label","placeholder","onChange","autoComplete","required","helperText","onBlur","justify","PhotoCamera","Input","controlled","fileReader","FileReader","file","files","onloadend","result","readAsDataURL","CircularProgress","size","CarForm","setName","totSeats","setTotSeats","consumption","setConsumption","fuel","setFuel","nameError","setNameError","FormControl","InputLabel","Select","labelId","MenuItem","step","InputProps","endAdornment","InputAdornment","position","val","instruction","carDivider","marginTop","SummaryData","carName","Typography","readOnly","Divider","inputProps","instructions","loading","backdrop","zIndex","drawer","loadingTypography","authSignup","first_name","last_name","googleToken","setPicture","formData","FormData","append","put","successPictureUpdate","postCar","profileId","tot_avail_seats","createCarSuccess","createCar","setCarName","googleAccessToken","open","setOpen","steps","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","isStepSkipped","has","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","disabled","isStepValid","align","Stepper","orientation","map","index","stepProps","labelProps","optional","completed","Step","StepLabel","StepContent","getStepContent","Backdrop","Box","padding","formContainer","height","fontSize","err","BaseRouter","createBrowserHistory","exact","path","LoginComponent","AlertItem","alert","Collapse","in","action","IconButton","aria-label","AlertContainer","alertItems","alerts","createMuiTheme","primary","light","main","contrastText","responsiveFontSizes","NotificationItem","notification","ListItem","read","href","url","ListItemAvatar","ListItemText","content","grow","flexGrow","menuButton","border","cursor","textDecoration","outline","breakpoints","up","search","borderRadius","shape","fade","common","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","logo","list","fullList","drawerTitle","logout","notificationsNumber","filter","mobileMoreAnchorEl","setMobileMoreAnchorEl","drawerOpen","setDrawerOpen","toggleDrawer","event","isMobileMenuOpen","Boolean","handleMobileMenuClose","logoutButton","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","Badge","badgeContent","aria-controls","aria-haspopup","notificationListItem","notificationDrawer","Drawer","anchor","role","onKeyDown","List","AppBar","Toolbar","pagesURL","alt","noWrap","InputBase","edge","currentTarget","disableElevation","profile","onTryAutoSignup","ThemeProvider","window","location","hostname","match","initialState","authStart","authSuccess","authFail","authReducer","scrollTo","uuid","removeAlert","removeAllAlerts","alertsReducer","profileStart","getProfileSuccess","profilePictureUpdate","profileError","userDataUpdate","clearProfileData","carCreate","carUpdate","findIndex","car","carDelete","profileReducer","notificationsStart","notificationsError","getNotificationSuccess","notificationUpdate","notificationReducer","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9d6a028f.chunk.js","sourcesContent":["export const landingPage = \"/\";\nexport const home = \"/home\";\nexport const login = \"/login\";\nexport const signup = \"/signup\";\nexport const myProfile = \"/my-profile\";\nexport const profile_id = \"/profiles/:id\";\nexport const profile = \"/profiles/\";\nexport const event_id = \"/events/:id\";\nexport const event = \"/events/\";\n","import {home} from \"./pagesurls\";\n\nexport const CLIENT_ID = \"283420556311-30r26g3mtt5odkqmit6u7onam3qrul16.apps.googleusercontent.com\";\nexport const CLIENT_SECRET = \"KsSTbOaPDbxEbEGqkcyWl3-v\";\nexport const APP_CLIENTID = \"4mOLHPfJL0zueHOlawvJXsdnImpjOv3PmLdmm3NT\";\nexport const APP_SECRET = \"FW4dYuZsLmE6PQHk7qrPAc4shQhdx2hknqNOh58XO3JQ6PFI8um2z6wyJubxF6hKNOOOJfZUQ67jm5ApN5HJioq4XsNAGSbCLiQZqrqfo6jiy67ddpvMOl3Be8SATFSL\";\n\nexport const serverURL = \"http://localhost:8000/\";\n\nexport const status = [\n    'Joinable',\n    'Computing',\n    'Computed'\n];\n\nexport const defaultProfilePic = serverURL + \"media/default-profile.jpg\"","import {serverURL} from \"./constants\";\n\nlet apiBaseUrl = serverURL + 'api/v0.1/';\n\nexport const eventListURL = (joinable = true, joined = true, owned = false) => (apiBaseUrl + `events/?joined=${joined}&joinable=${joinable}&owned=${owned}`);\n\nexport const eventCreateURL = () => (apiBaseUrl + 'events/');\n\nexport const eventDetailURL = (eventPk) => (`${eventCreateURL()}${eventPk}/`);\n\nexport const eventJoinURL = (eventPk) => (`${eventDetailURL(eventPk)}participants/`);\n\nexport const participationEditURL = (eventPk, participantPk) => (`${eventJoinURL(eventPk)}${participantPk}/`);\n\nexport const currentProfileURL = () => (apiBaseUrl + 'current-profile/');\n\nexport const convertTokenURL = () => (apiBaseUrl + 'auth/convert-token');\n\nexport const tokenURL = () => (apiBaseUrl + 'auth/token');\n\nexport const signupURL = () => (apiBaseUrl + 'signup/');\n\nexport const profilesURL = (profilePk) => (apiBaseUrl + `profiles/${profilePk}/`);\n\nexport const carsListURL = (profilePk) => (`${profilesURL(profilePk)}cars/`);\n\nexport const carsDetailURL = (profilePk, carPk) => (`${carsListURL}${carPk}/`);\n\nexport const createFeedbackURL = (eventPk, receiverParticipantPk) => (`${participationEditURL(eventPk, receiverParticipantPk)}feedback/`);\n\nexport const editFeedbackURL = (eventPk, receiverParticipantPk, feedbackPk) => (`${createFeedbackURL(eventPk, receiverParticipantPk)}${feedbackPk}/`);\n\nexport const notificationListURL = () => (`${currentProfileURL()}notifications/`);\nexport const notificationEditURL = (notificationPk) => (`${notificationListURL()}${notificationPk}/`)\n\n\n","import * as actionTypes from \"./types\";\n\nexport const addAlert = (text, style) => {\n    return {\n        type: actionTypes.ADD_ALERT,\n        text: text,\n        style: style\n    };\n};\n\nexport const removeAllAlerts = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALL_ALERTS\n    });\n};\n\nexport const removeAlert = (id) => (dispatch) => {\n    dispatch({\n        type: actionTypes.REMOVE_ALERT,\n        id: id\n    });\n};\n\n\nexport const alertError = (error) => (dispatch) => {\n    console.log(error)\n    if (error.response) {\n        dispatch(addAlert(JSON.stringify(error.response.data), \"error\"));\n    } else {\n        dispatch(addAlert(error.toString(), \"error\"));\n    }\n};\n\n","/*\n    Alerts\n */\nexport const ADD_ALERT = \"ADD_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REMOVE_ALL_ALERTS = \"REMOVE_ALL_ALERTS\";\n\n/*\n    Auth\n*/\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n/*\n    Profile\n */\nexport const PROFILE_OP_START = \"PROFILE_OP_START\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const PROFILE_PICTURE_UPDATE = \"PROFILE_PICTURE_UPDATE\";\nexport const PROFILE_OP_ERROR = \"PROFILE_OP_ERROR\";\nexport const USER_DATA_UPDATE = \"USER_DATA_UPDATE\";\nexport const CLEAR_PROFILE_DATA = \"CLEAR_PROFILE_DATA\";\n\n/*\n    Profile - Car\n */\nexport const CAR_CREATE = \"CAR_CREATE\";\nexport const CAR_UPDATE = \"CAR_UPDATE\";\nexport const CAR_DELETE = \"CAR_DELETE\";\n\n/*\n    Notifications\n */\nexport const NOTIFICATIONS_START = \"NOTIFICATIONS_START\";\nexport const NOTIFICATIONS_ERROR = \"NOTIFICATIONS_ERROR\";\nexport const GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\nexport const NOTIFICATION_UPDATE = \"NOTIFICATION_UPDATE\";\nexport const CLEAR_NOTIFICATIONS = \"CLEAR_NOTIFICATIONS\";","export const isAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n        return false;\n    } else {\n        const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n        return expirationDate > new Date();\n    }\n};\n\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\n/**\n *\n * @param {string}content_type\n * @param {string}access_token\n * @param {{}}otherHeaders\n * @param otherOptions\n */\nexport const headers = (content_type, access_token = null, otherHeaders = {}, otherOptions = {}) => {\n    let headers = {\n        headers: {\n            \"Content-type\": content_type,\n            ...otherHeaders\n        },\n        ...otherOptions\n    };\n    if (access_token != null) headers = {\n        ...headers, headers: {...headers.headers, \"Authorization\": `Bearer ${access_token}`}\n    };\n    return headers\n};","import axios from \"axios\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"./types\";\nimport {carsListURL, currentProfileURL, signupURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {addAlert, alertError, removeAllAlerts} from \"./alertActions\";\nimport {authLogout} from \"./authActions\";\n\n\nconst start = () => (\n    {\n        type: PROFILE_OP_START\n    }\n);\n\nconst getSuccess = (id, user, picture, score, carSet, averageVote, receivedFeedback, givenFeedback) => (\n    {\n        type: GET_PROFILE_SUCCESS,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    }\n);\n\nconst successPictureUpdate = (picture) => (\n    {\n        type: PROFILE_PICTURE_UPDATE,\n        picture,\n    }\n);\n\nconst fail = () => (\n    {\n        type: PROFILE_OP_ERROR,\n    }\n);\n\nconst changeUserDataSuccess = (id, firstName, lastName, email) => (\n    {\n        type: USER_DATA_UPDATE,\n        id,\n        firstName,\n        lastName,\n        email\n    }\n);\n\nconst createCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_CREATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst changeCarSuccess = (id, name, totSeats, fuel, consumption) => (\n    {\n        type: CAR_UPDATE,\n        id,\n        name,\n        totSeats,\n        fuel,\n        consumption,\n    }\n);\n\nconst deleteCarSuccess = (id) => (\n    {\n        type: CAR_DELETE,\n        id,\n    }\n);\n\nexport const clearProfileData = () => (dispatch) => (dispatch(\n        {\n            type: CLEAR_PROFILE_DATA\n        })\n);\n\n\nexport const fetchProfile = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            currentProfileURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, user, picture, score, car_set, average_vote, received_feedback, given_feedback} = res.data;\n            localStorage.setItem(\"profile_id\", id);\n            dispatch(removeAllAlerts());\n            return dispatch(getSuccess(id, user, picture, score, car_set, average_vote, received_feedback, given_feedback));\n        })\n        .catch(error => {\n            dispatch(fail());\n            dispatch(alertError(error));\n            return error;\n        })\n};\n\n\nexport const changePicture = (picture) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let formData = new FormData();\n    formData.append(\"picture\", picture, picture.name);\n    return axios\n        .put(\n            currentProfileURL(),\n            formData,\n            headers('multipart/form-data', access_token)\n        )\n        .then(res => {\n            dispatch(successPictureUpdate(res.data.picture));\n            dispatch(addAlert(\"Immagine modificata con successo!\", \"success\"));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const changeUserData = (first_name, last_name, email, password = null) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let data = {\n        first_name: first_name,\n        last_name: last_name,\n        email: email,\n        password: password\n    };\n    if (password != null) {\n        data.password = password;\n    }\n    return axios\n        .put(\n            signupURL(),\n            data,\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, firstName, lastName, email} = res.data;\n            dispatch(changeUserDataSuccess(id, firstName, lastName, email));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        });\n};\n\n\nexport const deleteUser = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n\n    return axios\n        .delete(\n            signupURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            addAlert(\"You have been deleted from the system!\", \"success\");\n            dispatch(authLogout());\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const createCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .post(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(createCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const updateCar = (name, totSeats, fuel, consumption) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n\n    return axios\n        .put(\n            carsListURL(profileId),\n            {\n                name: name,\n                tot_avail_seats: totSeats,\n                fuel: fuel,\n                consumption: consumption,\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            let {id, name, totSeats, fuel, consumption} = res.data;\n            dispatch(changeCarSuccess(id, name, totSeats, fuel, consumption))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n\nexport const deleteCar = (id) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    let profileId = localStorage.getItem(\"profile_id\");\n    return axios\n        .delete(\n            carsListURL(profileId),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(deleteCarSuccess(id));\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n","import {notificationEditURL, notificationListURL} from \"../constants/apiurls\";\nimport {headers} from \"../utils\";\nimport {alertError} from \"./alertActions\";\nimport axios from \"axios\";\nimport {\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START,\n    CLEAR_NOTIFICATIONS\n} from \"./types\";\n\nconst start = () => (\n    {\n        type: NOTIFICATIONS_START\n    }\n);\n\nconst fail = () => (\n    {\n        type: NOTIFICATIONS_ERROR\n    }\n);\n\nconst getSuccess = (notifications) => (\n    {\n        type: GET_NOTIFICATIONS_SUCCESS,\n        notifications\n    }\n);\n\n/**\n *\n * @param id\n * @param {boolean} read\n */\nconst readSuccess = (id, read) => (\n    {\n        type: NOTIFICATION_UPDATE,\n        id,\n        read\n    }\n);\n\n\nexport const clearNotifications = () => (dispatch) => {\n    dispatch({type: CLEAR_NOTIFICATIONS})\n};\n\nexport const retrieveNotifications = () => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .get(\n            notificationListURL(),\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(getSuccess(res.data))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\nexport const readNotification = (notificationId, read = true) => (dispatch) => {\n    dispatch(start());\n    let access_token = localStorage.getItem(\"access_token\");\n    return axios\n        .put(\n            notificationEditURL(notificationId),\n            {\n                read: read\n            },\n            headers('application/json', access_token)\n        )\n        .then(res => {\n            dispatch(readSuccess(notificationId, read))\n        })\n        .catch(error => {\n            dispatch(alertError(error));\n            dispatch(fail());\n            return error;\n        })\n};\n\n","import axios from \"axios\";\nimport {convertTokenURL, tokenURL, signupURL} from \"../constants/apiurls\";\nimport {alertError, removeAllAlerts} from './alertActions';\nimport {AUTH_ERROR, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"./types\";\nimport loginURL from \"../constants/apiurls\";\nimport {APP_CLIENTID, APP_SECRET} from \"../constants/constants\";\nimport * as qs from \"qs\";\nimport {headers} from \"../utils\";\nimport {clearProfileData, fetchProfile} from \"./profileActions\";\nimport {clearNotifications, retrieveNotifications} from \"./notificationsActions\";\n\nconst start = () => ({\n    type: AUTH_START,\n});\n\nconst success = (token) => ({\n    type: AUTH_SUCCESS,\n    token: token\n});\n\nconst fail = () => ({\n    type: AUTH_ERROR\n});\n\nconst logout = () => {\n    localStorage.clear();\n    return {\n        type: AUTH_LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime, refresh_token) => dispatch => {\n    setTimeout(() => {\n        dispatch(refreshAuth(refresh_token));\n    }, expirationTime * 1000);\n};\n\nexport const refreshAuth = (refresh_token) => (dispatch) => {\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'refresh_token',\n                refresh_token: refresh_token,\n            }),\n            headers('application/x-www-form-urlencoded')\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(fetchProfile());\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const googleOAuthLogin = (google_token) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            convertTokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'convert_token',\n                backend: 'google-oauth2',\n                token: google_token\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(retrieveNotifications());\n            dispatch(checkAuthTimeout(3600));\n            return dispatch(fetchProfile());\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authLogin = (username, password) => (dispatch) => {\n    dispatch(start());\n\n    return axios\n        .post(\n            tokenURL(),\n            qs.stringify({\n                client_id: APP_CLIENTID,\n                client_secret: APP_SECRET,\n                grant_type: 'password',\n                username: username,\n                password: password,\n            }),\n            headers(\"application/x-www-form-urlencoded\")\n        )\n        .then(res => {\n            let access_token = res.data.access_token;\n            let refresh_token = res.data.refresh_token;\n            let expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem(\"access_token\", access_token);\n            localStorage.setItem(\"refresh_token\", refresh_token);\n            localStorage.setItem(\"expiration_date\", expirationDate);\n            dispatch(success(access_token));\n            dispatch(checkAuthTimeout(3600));\n            dispatch(retrieveNotifications());\n            return dispatch(fetchProfile());\n\n\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\n\nexport const authSignup = (username, first_name, last_name, email, password) => (dispatch) => {\n    dispatch(start());\n    // we return the promise in order to use wait till the end using \"then\"\n    return axios\n        .post(\n            signupURL(),\n            {\n                username: username,\n                first_name: first_name,\n                last_name: last_name,\n                email: email,\n                password: password\n            },\n            headers('application/json')\n        )\n        .then(res => {\n            return dispatch(authLogin(username, password))\n        })\n        .catch(error => {\n            dispatch(fail(error));\n            dispatch(alertError(error));\n            return error;\n        });\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"access_token\");\n        if (token === undefined || token === null) {\n            dispatch(authLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem(\"expiration_date\"));\n            if (expirationDate <= new Date()) {\n                dispatch(authLogout());\n            } else {\n                dispatch(success(token));\n                dispatch(retrieveNotifications()).catch((error) => {\n                    return dispatch(authLogout())\n                });\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n                dispatch(fetchProfile()).catch((error) => {\n                    dispatch(authLogout())\n                });\n            }\n        }\n    };\n};\n\nexport const authLogout = () => dispatch => {\n    dispatch(logout());\n    dispatch(removeAllAlerts());\n    dispatch(clearProfileData());\n    dispatch(clearNotifications());\n};\n\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {home, login} from \"../constants/pagesurls\";\nimport {connect} from \"react-redux\";\nimport {authCheckState, authLogin, googleOAuthLogin} from \"../actions/authActions\";\nimport {Container, Paper} from \"@material-ui/core\";\nimport {white} from \"color-name\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {history} from \"../App\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '100vw',\n        backgroundColor: white,\n        alignItems: 'center',\n        flexDirection: 'column',\n        display: 'flex',\n    },\n    formPaper: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 20,\n        maxWidth: '55ch',\n        minWidth: '10ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nconst AuthContainer = ({children, isAuthenticated}) => {\n    useEffect(() => {\n        if (isAuthenticated) history.push(home)\n    });\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth=\"xs\">\n            <Paper className={classes.formPaper}>\n                {children}\n            </Paper>\n        </Container>\n    )\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(AuthContainer)","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:#4285F4;}\\n\\t.st1{fill:#34A853;}\\n\\t.st2{fill:#FBBC04;}\\n\\t.st3{fill:#EA4335;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M533.5,278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1,33.8-25.7,63.7-54.4,82.7v68h87.7 C503.9,431.2,533.5,361.2,533.5,278.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M272.1,544.3c73.4,0,135.3-24.1,180.4-65.7l-87.7-68c-24.4,16.6-55.9,26-92.6,26c-71,0-131.2-47.9-152.8-112.3 H28.9v70.1C75.1,486.3,169.2,544.3,272.1,544.3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st2\",\n  d: \"M119.3,324.3c-11.4-33.8-11.4-70.4,0-104.2V150H28.9c-38.6,76.9-38.6,167.5,0,244.4L119.3,324.3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st3\",\n  d: \"M272.1,107.7c38.8-0.6,76.3,14,104.4,40.8l0,0l77.7-77.7C405,24.6,339.7-0.8,272.1,0C169.2,0,75.1,58,28.9,150 l90.4,70.1C140.8,155.6,201.1,107.7,272.1,107.7z\"\n}));\n\nvar SvgGoogleLogo = function SvgGoogleLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Livello_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 533.5 544.3\",\n    style: {\n      enableBackground: \"new 0 0 533.5 544.3\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGoogleLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/GoogleLogo.fb42d919.svg\";\nexport { ForwardRef as ReactComponent };","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {CLIENT_ID, defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\nimport GoogleLogin from \"react-google-login\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport {ReactComponent as GoogleIcon} from '../../../icons/GoogleLogo.svg'\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        color: theme.palette.getContrastText(theme.palette.secondary.dark),\n        backgroundColor: theme.palette.secondary.dark,\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    },\n    googleLogin: {\n        width: '100%',\n        backgroundColor: \"white\"\n    },\n    editAlert: {\n        width: '90%'\n    }\n\n}));\n\n\nconst PersonalInfoForm = ({\n                              firstName, setFirstName, lastName, setLastName, username, setUsername,\n                              usernameError, setUsernameError, password, setPassword, passwordError,\n                              setPasswordError, email, setEmail, emailError, setEmailError,\n                              image, setImage, imageURL, setImageURL, isGoogleLogin, setGoogleLogin,\n                              setGoogleAccessToken, handleNext\n                          }) => {\n    const classes = useStyles();\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\n    const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n    const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n\n    const validateEmail = (input) => {\n        undoGoogleLogin();\n        if (input.target.value === null || input.target.value === \"\") {\n            setEmailError(true);\n            setEmailHelperText(\"Required\");\n        } else if (!(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(input.target.value))) {\n            setEmailError(true);\n            setEmailHelperText(\"Not a valid email\");\n        } else {\n            setEmailError(false);\n            setEmailHelperText(\"\");\n        }\n        setEmail(input.target.value)\n    };\n\n    const validateUsername = (input) => {\n        undoGoogleLogin()\n        if (input.target.value === null || \"\" === input.target.value) {\n            setUsernameError(true);\n            setUsernameHelperText(\"Required\");\n        } else {\n            setUsernameError(false);\n            setUsernameHelperText(\"\");\n        }\n        setUsername(input.target.value)\n    };\n\n    const validatePassword = (input) => {\n        undoGoogleLogin()\n        if (input.target.value === null || input.target.value === \"\") {\n            setPasswordError(true);\n            setPasswordHelperText(\"Required\");\n        } else if (!(/^[\\w!@#$%^&*]{8,}$/.test(input.target.value))) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should be at least 8 character long\");\n        } else if (!/^(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 number\");\n        } else if (!/^(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 capital\");\n        } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 lowercase\");\n        } else if (!/^(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d])[\\w!@#$%^&*]{8,}$/.test(input.target.value)) {\n            setPasswordError(true);\n            setPasswordHelperText(\"Should contain at least 1 special character\");\n        } else {\n            setPasswordError(false);\n            setPasswordHelperText(\"\");\n        }\n        setPassword(input.target.value)\n    };\n\n    const undoGoogleLogin = () => {\n        setGoogleAccessToken(\"\");\n        setGoogleLogin(false);\n    }\n\n    let charName = (firstName !== \"\" ? firstName.toUpperCase().charAt(0) : \"\") + (lastName !== \"\" ? lastName.toUpperCase().charAt(0) : \"\");\n    return (\n        <div className={classes.root}>\n            <Avatar src={imageURL} className={classes.imgPreview}>\n                {charName !== \"\" ? charName : null}\n            </Avatar>\n\n            <form className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <GoogleLogin\n                            isSignedIn={false}\n                            onSuccess={(input) => {\n                                let username = input.profileObj.email.split(\"@\")[0].replace(' ', '_').replace('.', '_')\n                                setGoogleAccessToken(input.accessToken)\n                                setGoogleLogin(true)\n                                setFirstName(input.profileObj.givenName)\n                                setLastName(input.profileObj.familyName)\n                                setEmail(input.profileObj.email)\n                                setUsername(username)\n                                setImageURL(input.profileObj.imageUrl)\n                                axios.get(input.profileObj.imageUrl, {responseType: 'blob'}).then(res => {\n                                    let blob = res.data\n                                    let type = res.data.type.split('/').pop()\n                                    blob.name = `${username}.${type}`\n                                    setImage(blob)\n                                })\n                                handleNext()\n                            }}\n                            onFailure={() => {\n                            }}\n                            clientId={CLIENT_ID} render={renderProps => (\n                            <Button variant=\"contained\"\n                                    className={classes.googleLogin}\n                                    onClick={renderProps.onClick}\n                                    startIcon={<SvgIcon component={GoogleIcon} viewBox=\"0 0 533.5 544.3\"/>}\n                            >\n                                Signup with Google\n                            </Button>\n                        )}/>\n                    </Grid>\n                    {isGoogleLogin &&\n                    <Grid item xs={12}>\n                        <Alert className={classes.editAlert} severity=\"warning\">Editing these info will undo your Google\n                            Signup</Alert>\n                    </Grid>\n                    }\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"name\" label=\"First Name\" placeholder=\"James\"\n                                   value={firstName}\n                                   onChange={(input) => {\n                                       undoGoogleLogin();\n                                       setFirstName(input.target.value)\n                                   }}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField variant=\"outlined\" fullWidth id=\"surname\" label=\"Last Name\" placeholder=\"Bond\"\n                                   value={lastName}\n                                   onChange={(input) => {\n                                       undoGoogleLogin();\n                                       setLastName(input.target.value)\n                                   }}\n                                   autoComplete=\"family-name\"/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"username\"\n                                   label=\"Username\"\n                                   value={username}\n                                   placeholder=\"jamesbond007\"\n                                   helperText={usernameHelperText}\n                                   onChange={validateUsername}\n                                   onBlur={validateUsername}\n                                   error={usernameError}\n                                   autoComplete=\"username\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"email\"\n                                   label=\"E-mail\"\n                                   placeholder=\"jamesbond@mi6.co.uk\"\n                                   type=\"email\"\n                                   error={emailError}\n                                   helperText={emailHelperText}\n                                   onChange={validateEmail}\n                                   onBlur={validateEmail}\n                                   value={email}\n                                   autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField variant=\"outlined\"\n                                   fullWidth\n                                   required id=\"password\"\n                                   label=\"Password\"\n                                   error={passwordError}\n                                   value={password}\n                                   type=\"password\"\n                                   helperText={passwordHelperText}\n                                   onChange={validatePassword}\n                                   onBlur={validatePassword}\n                                   autoComplete=\"new-password\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            component=\"label\"\n                            justify=\"flex-end\"\n                            className={classes.button}\n                            startIcon={<PhotoCamera/>}\n                        >Picture\n\n                            <Input className={classes.imageInput} type=\"file\" controlled=\"true\" onChange={(input) => {\n                                undoGoogleLogin();\n                                setImage(\"loading\");\n                                let fileReader = new FileReader();\n                                let file = input.target.files[0];\n                                fileReader.onloadend = () => {\n                                    setImageURL(fileReader.result)\n                                }\n                                setImage(file)\n                                fileReader.readAsDataURL(file)\n\n                            }}/>\n                            {image === \"loading\" ? (\n                                <>\n                                    <CircularProgress size=\"2ch\" className={classes.imageProgress}/>\n                                </>\n                            ) : (\n                                <>\n                                </>\n                            )}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n};\n\nexport default PersonalInfoForm;","import Button from \"@material-ui/core/Button\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {login} from \"../../../constants/pagesurls\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n}));\n\n\nconst CarForm = ({\n                     name, setName, totSeats, setTotSeats,\n                     consumption, setConsumption,\n                     fuel, setFuel,\n                 }) => {\n    const classes = useStyles();\n    let [nameError, setNameError] = useState(false)\n\n    return (\n        <div className={classes.root}>\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"car-name\" label=\"Name\" placeholder=\"Fiat Uno 1992\"\n                                   value={name}\n                                   onChange={(input) => {\n                                       let name = input.target.value;\n                                       if (name.length > 0) {\n                                           setNameError(false)\n                                       } else {\n                                           setNameError(true)\n                                       }\n                                       setName(name);\n                                   }}\n                                   onBlur={(input) => {\n                                       if (input.target.value.length < 0 || input.target.value === \"\") {\n                                           setNameError(true)\n                                       }\n                                   }}\n                                   error={nameError}\n                                   required\n                                   helperText={nameError ? \"Name is required\" : \"\"}\n                                   autoComplete=\"name\"/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                            <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                    onChange={(input) => {\n                                        setTotSeats(input.target.value)\n                                    }}>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                                <MenuItem value={6}>6</MenuItem>\n                                <MenuItem value={7}>7</MenuItem>\n                                <MenuItem value={8}>8</MenuItem>\n                                <MenuItem value={9}>9</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl variant=\"outlined\">\n                            <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                            <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                    onChange={(input) => {\n                                        setFuel(input.target.value)\n                                    }}>\n                                <MenuItem value={1}>Petrol</MenuItem>\n                                <MenuItem value={2}>Diesel</MenuItem>\n                                <MenuItem value={3}>Gas</MenuItem>\n                                <MenuItem value={4}>Electric</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            type=\"number\"\n                            helperText=\"Between 5 and 25\"\n                            step={0.05}\n                            label=\"Consumption\"\n                            value={consumption}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                            }}\n                            onChange={(input) => {\n                                setConsumption(input.target.value)\n                            }}\n                            onBlur={(input) => {\n                                let val = input.target.value\n                                if (val < 5)\n                                    input.target.value = 5;\n                                if (val > 20)\n                                    input.target.value = 20;\n                                setConsumption(input.target.value)\n                            }}\n\n                        />\n                    </Grid>\n\n                </Grid>\n            </FormControl>\n        </div>\n    )\n};\n\nexport default CarForm;","import {makeStyles} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {defaultProfilePic} from \"../../../constants/constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n    },\n\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imageInput: {\n        display: 'none',\n    },\n    imageProgress: {\n        marginLeft: theme.spacing(1),\n    },\n    imgPreview: {\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    },\n    instruction: {\n        marginBottom: theme.spacing(2),\n    },\n    carDivider: {\n        width: '123%',\n        marginTop: theme.spacing(5),\n        marginRight: '22px',\n        marginBottom: theme.spacing(5),\n    }\n\n}));\n\nconst SummaryData = ({\n                         firstName, lastName, username, password, email,\n                         imageURL, carName, totSeats, consumption, fuel,\n                         isGoogleLogin\n                     }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.instruction}>\n                Review you're data before submitting!\n            </Typography>\n            <Avatar src={imageURL !== \"\" ? imageURL : defaultProfilePic} className={classes.imgPreview}/>\n\n            <FormControl variant=\"outlined\" className={classes.form}>\n                <Grid container spacing={2}>\n                    {isGoogleLogin &&\n                    <>\n                        <Grid item xs={12}>\n                            <Alert severity=\"info\">Signing in with Google</Alert>\n                        </Grid>\n                    </>\n                    }\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"name\" label=\"First Name\" value={firstName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField fullWidth id=\"surname\" label=\"Last Name\" value={lastName} InputProps={{\n                            readOnly: true,\n                        }}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            value={username}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            id=\"email\"\n                            label=\"E-mail\"\n                            type=\"email\"\n                            value={email}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </Grid>\n                    {!isGoogleLogin &&\n                    <>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                value={password}\n                                type=\"password\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                        </Grid>\n                    </>\n                    }\n                </Grid>\n            </FormControl>\n            {carName !== \"\" &&\n            <>\n                <Divider className={classes.carDivider}/>\n                <FormControl variant=\"outlined\" className={classes.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField fullWidth id=\"car-name\" label=\"Name\"\n                                       value={carName}\n                                       InputProps={{\n                                           readOnly: true,\n                                       }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"tot-seats-label\">Seats</InputLabel>\n                                <Select id=\"tot-seats\" label=\"Seats\" labelId=\"tot-seats-label\" value={totSeats}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}\n                                >\n                                    <MenuItem value={2}>2</MenuItem>\n                                    <MenuItem value={3}>3</MenuItem>\n                                    <MenuItem value={4}>4</MenuItem>\n                                    <MenuItem value={5}>5</MenuItem>\n                                    <MenuItem value={6}>6</MenuItem>\n                                    <MenuItem value={7}>7</MenuItem>\n                                    <MenuItem value={8}>8</MenuItem>\n                                    <MenuItem value={9}>9</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl variant=\"outlined\">\n                                <InputLabel id=\"fuel-label\">Fuel</InputLabel>\n                                <Select id=\"fuel\" labelId=\"fuel-label\" label=\"Fuel\" value={fuel}\n                                        inputProps={{\n                                            readOnly: true,\n                                        }}>\n                                    <MenuItem value={1}>Petrol</MenuItem>\n                                    <MenuItem value={2}>Diesel</MenuItem>\n                                    <MenuItem value={3}>Gas</MenuItem>\n                                    <MenuItem value={4}>Electric</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                type=\"number\"\n                                step={0.05}\n                                label=\"Consumption\"\n                                value={consumption}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">l/100Km</InputAdornment>,\n                                    readOnly: true,\n                                }}\n                            />\n                        </Grid>\n\n                    </Grid>\n                </FormControl>\n            </>\n            }\n        </div>\n    )\n};\n\nexport default SummaryData;","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport CarForm from \"./signup/CarForm\";\nimport SummaryData from \"./signup/SummaryData\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {home, signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authCheckState, authLogin, authSignup, googleOAuthLogin} from \"../../actions/authActions\";\nimport {connect} from \"react-redux\";\nimport {changePicture, createCar} from \"../../actions/profileActions\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    root: {\n        width: '95%',\n        margin: 10\n    },\n    loading: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    loadingTypography: {\n        marginBottom: theme.spacing(2),\n    }\n\n}));\n\nconst getSteps = () => (\n    [\"Personal Info\", \"Add your Car\", \"Submit!\"]\n);\n\n\nfunction SignupComponent({authSignup, googleLogin, setPicture, postCar}) {\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n    const [image, setImage] = useState(null);\n    const [imageURL, setImageURL] = useState(\"\");\n\n\n    const [carName, setCarName] = useState(\"\");\n    const [totSeats, setTotSeats] = useState(4);\n    const [consumption, setConsumption] = useState(10);\n    const [fuel, setFuel] = useState(1);\n\n    const [isGoogleLogin, setGoogleLogin] = useState(false);\n    const [googleAccessToken, setGoogleAccessToken] = useState(\"\");\n\n    const [open, setOpen] = useState(true);\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PersonalInfoForm firstName={firstName} setFirstName={setFirstName} lastName={lastName}\n                                         setLastName={setLastName} username={username} setUsername={setUsername}\n                                         usernameError={usernameError} setUsernameError={setUsernameError} email={email}\n                                         setEmail={setEmail} emailError={emailError} setEmailError={setEmailError}\n                                         password={password} setPassword={setPassword} passwordError={passwordError}\n                                         setPasswordError={setPasswordError} image={image} setImage={setImage}\n                                         imageURL={imageURL} setImageURL={setImageURL} isGoogleLogin={isGoogleLogin}\n                                         setGoogleLogin={setGoogleLogin}\n                                         setGoogleAccessToken={setGoogleAccessToken} handleNext={handleNext}\n                />;\n            case 1:\n                return <CarForm name={carName} setName={setCarName} totSeats={totSeats} setTotSeats={setTotSeats}\n                                consumption={consumption} setConsumption={setConsumption} fuel={fuel}\n                                setFuel={setFuel}/>\n            case 2:\n                return <SummaryData firstName={firstName} lastName={lastName} username={username} email={email}\n                                    password={password} imageURL={imageURL} carName={carName} totSeats={totSeats}\n                                    consumption={consumption} fuel={fuel} isGoogleLogin={isGoogleLogin}/>\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n\n    const steps = getSteps();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepValid = (step) => {\n        switch (step) {\n            case 0:\n                return (!emailError && email.length > 0 && !usernameError && username.length > 0 && !passwordError && password.length > 0) || isGoogleLogin;\n            case 1:\n                return carName.length > 0;\n            default:\n                return true;\n        }\n    };\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const clearSkipped = (step) => {\n        if (step === 1) {\n            setCarName(\"\")\n            setTotSeats(4)\n            setFuel(1)\n            setConsumption(10)\n        }\n    }\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n        clearSkipped(activeStep)\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const uploadData = () => {\n        if (isGoogleLogin) {\n            googleLogin(googleAccessToken).then((value) => {\n                if (value instanceof Error) {\n                    setOpen(false);\n                    setActiveStep(0);\n                } else {\n                    if (carName !== \"\") {\n                        postCar(carName, totSeats, fuel, consumption)\n                    }\n                    if (imageURL !== \"\") {\n                        setPicture(image)\n                    }\n                    history.push(home)\n                }\n            })\n        } else {\n            authSignup(username, firstName, lastName, email, password).then((value) => {\n                if (value instanceof Error) {\n                    setOpen(false);\n                    setActiveStep(0);\n                } else {\n                    if (carName !== \"\") {\n                        postCar(carName, totSeats, fuel, consumption)\n                    }\n                    if (imageURL !== \"\") {\n                        setPicture(image)\n                    }\n                    history.push(home)\n                }\n            })\n        }\n    }\n\n    if (activeStep === steps.length) {\n        uploadData()\n    }\n\n    const disabled = !isStepValid(activeStep);\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Sign Up!\n            </Typography>\n            <Divider/>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            <StepContent>\n                                {getStepContent(index)}\n                                <div>\n                                    <Button disabled={activeStep === 0} onClick={handleBack}\n                                            className={classes.button}>\n                                        Back\n                                    </Button>\n                                    {isStepOptional(activeStep) && (\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleSkip}\n                                            className={classes.button}\n                                        >\n                                            Skip\n                                        </Button>\n                                    )}\n\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={disabled}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'SignUP!' : 'Next'}\n                                    </Button>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === steps.length &&\n            <Backdrop className={classes.backdrop} open={open}>\n                <Box className={classes.loading}>\n                    <Typography className={classes.loadingTypography}>\n                        Loading your data!\n                    </Typography>\n                    <CircularProgress color=\"inherit\"/>\n                </Box>\n            </Backdrop>\n\n            }\n\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authSignup: (username, firstName, lastName, email, password) => dispatch(authSignup(username, firstName, lastName, email, password)),\n        googleLogin: (googleToken) => dispatch(googleOAuthLogin(googleToken)),\n        setPicture: (image) => dispatch(changePicture(image)),\n        postCar: (carName, totSeats, fuel, consumption) => dispatch(createCar(carName, totSeats, fuel, consumption)),\n    };\n};\n\n\nexport default connect(null, mapDispatchToProps)(SignupComponent)","import React, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {white} from \"color-name\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Stepper} from \"@material-ui/core\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonalInfoForm from \"./signup/PersonalInfoForm\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport CarForm from \"./signup/CarForm\";\nimport SummaryData from \"./signup/SummaryData\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {home, signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authCheckState, authLogin, authSignup, googleOAuthLogin} from \"../../actions/authActions\";\nimport {connect} from \"react-redux\";\nimport {changePicture, createCar} from \"../../actions/profileActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport {CLIENT_ID} from \"../../constants/constants\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport {ReactComponent as GoogleIcon} from \"../../icons/GoogleLogo.svg\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport LockIcon from '@material-ui/icons/Lock';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    root: {\n        width: '95%',\n        margin: 10\n    },\n    formContainer: {\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    loading: {\n        marginBottom: theme.spacing(5),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    loadingTypography: {\n        marginBottom: theme.spacing(2),\n    },\n    form: {\n        width: '90%',\n    },\n    googleLogin: {\n        width: '100%',\n        height: 45,\n        backgroundColor: \"white\",\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    imgPreview: {\n        color: theme.palette.getContrastText(theme.palette.secondary.dark),\n        backgroundColor: theme.palette.secondary.dark,\n        margin: 10,\n        maxWidth: '9ch',\n        minWidth: '6ch',\n        maxHeight: '9ch',\n        minHeight: '6ch',\n    }\n\n}));\n\n\nfunction SignupComponent({authLogin, googleLogin}) {\n\n    const [username, setUsername] = useState(\"\");\n    const [usernameError, setUsernameError] = useState(false);\n\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const classes = useStyles();\n\n    const disabled = !(username.length > 0 && password.length > 0);\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n                Log in!\n            </Typography>\n            <Divider/>\n            <div className={classes.formContainer}>\n                <Avatar className={classes.imgPreview}>\n                    <LockIcon fontSize=\"large\"/>\n                </Avatar>\n\n                <form className={classes.form}>\n                    <Grid container spacing={5}>\n                        <Grid item xs={12}>\n                            <GoogleLogin\n                                isSignedIn={false}\n                                onSuccess={(input) => {\n                                    let username = input.profileObj.email.split(\"@\")[0]\n                                    googleLogin(input.accessToken).catch(err => {\n                                        if (!err instanceof Error)\n                                            history.push(home)\n                                    })\n\n                                }}\n                                onFailure={() => {\n                                }}\n                                clientId={CLIENT_ID} render={renderProps => (\n                                <Button variant=\"contained\"\n                                        className={classes.googleLogin}\n                                        onClick={renderProps.onClick}\n                                        startIcon={<SvgIcon component={GoogleIcon} viewBox=\"0 0 533.5 544.3\"/>}\n                                >\n                                    Login with Google\n                                </Button>\n                            )}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\"\n                                       fullWidth\n                                       required id=\"username\"\n                                       label=\"Username\"\n                                       value={username}\n                                       placeholder=\"jamesbond007\"\n                                       helperText=\"Required\"\n                                       onChange={(input) => {\n                                           setUsername(input.target.value);\n                                           setUsernameError(input.target.value.length === 0);\n                                       }}\n                                       onBlur={(input) => {\n                                           setUsername(input.target.value);\n                                           setUsernameError(input.target.value.length === 0);\n                                       }}\n                                       error={usernameError}\n                                       autoComplete=\"username\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\"\n                                       fullWidth\n                                       required id=\"password\"\n                                       label=\"Password\"\n                                       error={passwordError}\n                                       value={password}\n                                       type=\"password\"\n                                       helperText=\"Required\"\n                                       onChange={(input) => {\n                                           setPassword(input.target.value);\n                                           setPasswordError(input.target.value.length === 0);\n                                       }}\n                                       onBlur={(input) => {\n                                           setPassword(input.target.value);\n                                           setPasswordError(input.target.value.length === 0);\n                                       }}\n                                       autoComplete=\"new-password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                component=\"label\"\n                                justify=\"flex-end\"\n                                className={classes.button}\n                                disabled={disabled}\n                                onClick={() => {\n                                    authLogin(username, password).catch(err => {\n                                        if (!err instanceof Error)\n                                            history.push(home)\n                                    })\n                                }}\n                            >Log in\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n            <Backdrop className={classes.backdrop} open={open}>\n                <Box className={classes.loading}>\n                    <Typography className={classes.loadingTypography}>\n                        Loading your data!\n                    </Typography>\n                    <CircularProgress color=\"inherit\"/>\n                </Box>\n            </Backdrop>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authLogin: (username, password) => dispatch(authLogin(username, password)),\n        googleLogin: (googleToken) => dispatch(googleOAuthLogin(googleToken)),\n    };\n};\n\n\nexport default connect(null, mapDispatchToProps)(SignupComponent)","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\n// import requireAuth from \"./requireAuth\"; // deprecated\n\nimport {createBrowserHistory} from \"history\";\nimport AuthContainer from \"./containers/AuthContainer\";\nimport SignupComponent from \"./components/auth/SignupComponent\";\nimport LoginComponent from \"./components/auth/LoginComponent\";\n\nconst history = createBrowserHistory();\n\n\nconst BaseRouter = props => (\n    <div>\n        <Switch>\n            {/*<Route exact path=\"/\">*/}\n            {/*    <LandingPageContainer/>*/}\n            {/*</Route>*/}\n            <Route exact path=\"/login\">\n                <AuthContainer>\n                    <LoginComponent/>\n                </AuthContainer>\n            </Route>\n            <Route exact path=\"/signup\">\n                <AuthContainer>\n                    <SignupComponent/>\n                </AuthContainer>\n            </Route>\n            {/*<Route exact path=\"/home\" component={HomeContainer}/>*/}\n            {/*<Route exact path=\"/profile/:id\" component={ProfileContainer}/>*/}\n            {/*<Route exact path=\"/my-profile\" component={MyProfileContainer}/>*/}\n            {/*<Route exact path=\"/events/:id\" component={EventContainer}/>*/}\n            {/*<Route path=\"*\" component={NotFound404}/>*/}\n        </Switch>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AlertItem(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    let alert = props.alert;\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <Alert\n                    severity={alert.style}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                                setOpen(false);\n                            }}\n                        >\n                            <CloseIcon fontSize=\"inherit\"/>\n                        </IconButton>\n                    }\n                >\n                    {alert.text}\n                </Alert>\n            </Collapse>\n        </div>\n    );\n}","import React from 'react'\nimport AlertItem from \"../components/alerts/AlertItem\";\n\nexport default function AlertContainer(props) {\n    let alertItems = props.alerts.map((alert) => (\n        <AlertItem key={alert.id} alert={alert}/>\n    ));\n\n    return (\n        <div className=\"alert-container\">\n            {alertItems}\n        </div>\n    )\n\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#52c7b8',\n            main: '#009688',\n            dark: '#00675b',\n            contrastText: '#000',\n        },\n        secondary: {\n            light: '#ffc246',\n            main: '#ff9100',\n            dark: '#c56200',\n            contrastText: '#000',\n        },\n        background: {\n            paper: '#f0f0f0',\n        }\n    },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function NotificationItem({notification, history}) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <ListItem alignItems=\"flex-start\" disabled={notification.read} component=\"a\" href=\"#\"\n                      onClick={history.push(notification.url)}>\n                <ListItemAvatar>\n                    <ArrowForwardIosIcon/>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={notification.title}\n                    secondary={notification.content}\n                />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\"/>\n        </>\n    );\n}","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as pagesURL from \"../../constants/pagesurls\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {fade} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport theme from \"../../theme\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport NotificationItem from \"./NotificationItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Box from \"@material-ui/core/Box\";\nimport {login} from \"../../constants/pagesurls\";\nimport {signup} from \"../../constants/pagesurls\";\nimport {history} from \"../../App\";\nimport {authLogout} from \"../../actions/authActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n        display: 'none',\n        outline: 0,\n        marginLeft: 10,\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 5,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    logo: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        maxHeight: '60px',\n        outline: 0,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    drawerTitle: {\n        margin: 10,\n    },\n    logout: {\n        marginLeft: 20,\n    }\n}));\n\nfunction NavBar({isAuthenticated, notifications, notificationsNumber, authLogout}) {\n    const classes = useStyles();\n\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setDrawerOpen(open);\n    };\n\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const logoutButton = (\n        <Button color={\"inherit\"} className={classes.logout} onClick={() => {\n            handleMobileMenuClose()\n            authLogout()\n        }}> Logout</Button>\n    );\n\n    const menuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem\n                onClick={(event) => {\n                    toggleDrawer(true)(event);\n                    handleMobileMenuClose()\n                }}>\n                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\">\n                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n            <MenuItem>\n                {logoutButton}\n            </MenuItem>\n        </Menu>\n    );\n\n    let notificationListItem = notifications.map((notification) => (\n        <NotificationItem key={notification.id} notification={notification}/>\n    ));\n\n    const notificationDrawer = (\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n            <div className={classes.list}\n                 role=\"presentation\"\n                 onClick={toggleDrawer(false)}\n                 onKeyDown={toggleDrawer(false)}>\n                <Divider/>\n                <Typography className={classes.drawerTitle} variant=\"h6\">\n                    Notifications:\n                </Typography>\n                <Divider/>\n                <List>\n                    {notificationListItem}\n                </List>\n            </div>\n        </Drawer>\n    );\n\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <button className={classes.logo} href=\"#\" onClick={() => {\n                        isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                    }}>\n\n                        <img src=\"logo.svg\" alt=\"logo\" className={classes.logo}/>\n                    </button>\n                    <Typography className={classes.title} variant=\"h6\" noWrap component=\"button\" href=\"#\"\n                                onClick={() => {\n                                    isAuthenticated ? history.push(pagesURL.home) : history.push(pagesURL.landingPage)\n                                }}>\n                        DM Project\n                    </Typography>\n                    {isAuthenticated ? (\n                        <>\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon/>\n                                </div>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{'aria-label': 'search'}}\n                                />\n                            </div>\n\n                            <div className={classes.grow}/>\n                            <div className={classes.sectionDesktop}>\n                                <IconButton aria-label={`show ${notificationsNumber} new notifications`} color=\"inherit\"\n                                            onClick={toggleDrawer(true)}>\n                                    <Badge badgeContent={notificationsNumber} color=\"secondary\">\n                                        <NotificationsIcon/>\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={() => {\n                                    }}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle/>\n                                </IconButton>\n                                {logoutButton}\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton\n                                    aria-label=\"show more\"\n                                    aria-controls={mobileMenuId}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMobileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <MoreIcon/>\n                                </IconButton>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.grow}/>\n                            <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={() => {\n                                history.push(signup)\n                            }}>\n                                Signup\n                            </Button>\n                            <Button color=\"inherit\" disableElevation onClick={() => {\n                                history.push(login)\n                            }}>\n                                Login\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {notificationDrawer}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== undefined,\n        notificationsNumber: state.notifications.notifications.filter((notification) => (notification.read)).length,\n        notifications: state.notifications.notifications\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authLogout: () => dispatch(authLogout()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, {Component, useEffect} from 'react';\nimport './App.css';\nimport BaseRouter from \"./routes\";\nimport {authCheckState, authLogout} from \"./actions/authActions\";\nimport AlertContainer from \"./containers/AlertContainer\";\nimport {connect} from \"react-redux\";\nimport {Router} from \"react-router\";\nimport {createBrowserHistory} from \"history\";\n\nimport NavBar from \"./components/navbar/NavBar\";\nimport theme from \"./theme\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\nexport const history = createBrowserHistory();\n\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.onTryAutoSignup()\n    });\n\n    return (\n        <Router history={history}>\n            <ThemeProvider theme={theme}>\n                <NavBar/>\n                <AlertContainer alerts={props.alerts}/>\n                <BaseRouter/>\n            </ThemeProvider>\n        </Router>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.profile.user.username,\n        alerts: state.alerts\n    };\n};\n\n// authomatic auth check\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(authCheckState()),\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/types\";\nimport {updateObject} from \"../utils\";\n\nconst initialState = {\n    token: undefined,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        loading: true\n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: undefined\n    });\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_ERROR:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import * as actionTypes from \"../actions/types\";\nimport uuid from \"node-uuid\";\nimport {ADD_ALERT, REMOVE_ALERT, REMOVE_ALL_ALERTS} from \"../actions/types\";\n\nconst initialState = [];\n\nconst addAlert = (state, action) => {\n    window.scrollTo(0, 0); // scroll top in order to show alert\n    return [\n        ...state,\n        {\n            text: action.text,\n            style: action.style,\n            id: uuid()\n        }\n    ];\n};\n\nconst removeAlert = (state, action) => {\n    return state.filter(alert => {\n        return alert.id !== action.id;\n    });\n};\n\nconst removeAllAlerts = (state, action) => {\n    return initialState;\n};\n\nconst alertsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALERT:\n            return addAlert(state, action);\n        case REMOVE_ALERT:\n            return removeAlert(state, action);\n        case REMOVE_ALL_ALERTS:\n            return removeAllAlerts(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default alertsReducer;","import {updateObject} from \"../utils\";\nimport {\n    CAR_CREATE, CAR_DELETE, CAR_UPDATE,\n    CLEAR_PROFILE_DATA,\n    GET_PROFILE_SUCCESS,\n    PROFILE_OP_ERROR,\n    PROFILE_OP_START,\n    PROFILE_PICTURE_UPDATE,\n    USER_DATA_UPDATE\n} from \"../actions/types\";\n\nconst initialState = {\n    id: \"\",\n    picture: \"\",\n    score: 0,\n    carSet: [],\n    averageVote: 0,\n    receivedFeedback: [],\n    givenFeedback: [],\n    user: {},\n    loading: false,\n};\n\nconst profileStart = (state, action) => {\n    return updateObject(state, {loading: true})\n};\n\nconst getProfileSuccess = (state, action) => {\n    let {id, picture, score, carSet, averageVote, receivedFeedback, givenFeedback, user} = action;\n    return updateObject(state, {\n        loading: false,\n        id,\n        picture,\n        score,\n        carSet,\n        averageVote,\n        receivedFeedback,\n        givenFeedback,\n        user\n    })\n};\n\nconst profilePictureUpdate = (state, action) => {\n    return updateObject(state, {\n        loading: false,\n        picture: action.picture\n    })\n};\n\nconst profileError = (state, action) => {\n    return updateObject(state, {\n        loading: false\n    })\n};\n\nconst userDataUpdate = (state, action) => {\n    let {id, firstName, lastName, email} = action;\n    let user = state.user;\n    user.id = id;\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.email = email;\n    return updateObject(state, {\n        loading: false,\n        user: user\n    })\n};\n\nconst clearProfileData = (state, action) => {\n    return initialState;\n};\n\nconst carCreate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let carSet = state.carSet;\n    carSet.push({id: id, name: name, totSeats: totSeats, fuel: fuel, consumption: consumption});\n    state.loading = false;\n    return state;\n};\n\nconst carUpdate = (state, action) => {\n    let {id, name, totSeats, fuel, consumption} = action;\n    let index = state.carSet.findIndex((car) => (car.id === id));\n    state.carSet[index].name = name;\n    state.carSet[index].totSeats = totSeats;\n    state.carSet[index].fuel = fuel;\n    state.carSet[index].consumption = fuel;\n    state.loading = false;\n    return state;\n};\n\nconst carDelete = (state, action) => {\n    let carSet = state.carSet.filter((car) => (car.id !== action));\n    return updateObject(state, {\n        carSet: carSet,\n        loading: false,\n    })\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROFILE_OP_START:\n            return profileStart(state, action);\n        case GET_PROFILE_SUCCESS:\n            return getProfileSuccess(state, action);\n        case PROFILE_PICTURE_UPDATE:\n            return profilePictureUpdate(state, action);\n        case PROFILE_OP_ERROR:\n            return profileError(state, action);\n        case USER_DATA_UPDATE:\n            return userDataUpdate(state, action);\n        case CLEAR_PROFILE_DATA:\n            return clearProfileData(state, action);\n        case CAR_CREATE:\n            return carCreate(state, action);\n        case CAR_UPDATE:\n            return carUpdate(state, action);\n        case CAR_DELETE:\n            return carDelete(state, action);\n        default:\n            return state;\n\n\n    }\n};\n\nexport default profileReducer;","import {updateObject} from \"../utils\";\nimport {\n    CLEAR_NOTIFICATIONS,\n    GET_NOTIFICATIONS_SUCCESS,\n    NOTIFICATION_UPDATE,\n    NOTIFICATIONS_ERROR,\n    NOTIFICATIONS_START\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    notifications: []\n};\n\nconst notificationsStart = (state, action) => (\n    updateObject(state, {\n        loading: true\n    })\n);\n\nconst notificationsError = (state, action) => (\n    updateObject(state, {\n        loading: false\n    })\n);\n\nconst getNotificationSuccess = (state, action) => (\n    updateObject(state, {\n        notifications: action.notifications\n    })\n);\n\nconst notificationUpdate = (state, action) => {\n    let {id, read} = action;\n    let index = state.notifications.findIndex((notification) => (notification.id === id));\n    state.notifications[index].read = action;\n    return state\n};\n\nconst notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NOTIFICATIONS_START:\n            return notificationsStart(state, action);\n        case NOTIFICATIONS_ERROR:\n            return notificationsError(state, action);\n        case GET_NOTIFICATIONS_SUCCESS:\n            return getNotificationSuccess(state, action);\n        case NOTIFICATION_UPDATE:\n            return notificationUpdate(state, action);\n        case CLEAR_NOTIFICATIONS:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default notificationReducer;","import {combineReducers} from \"redux\";\nimport authReducer from \"./authReducer\";\nimport alertsReducer from \"./alertReducer\";\nimport profileReducer from \"./profileReducer\";\nimport notificationReducer from \"./notificationReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    alerts: alertsReducer,\n    profile: profileReducer,\n    notifications: notificationReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n        applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}